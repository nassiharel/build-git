contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: 6.1.0
    itemVersion: 3.1.3
    packID: Phishing
    packName: Phishing
    packPropagationLabels:
    - all
    propagationLabels: []
    toServerVersion: ""
description: "This playbook investigates and remediates a potential phishing incident.
  It engages with the user that triggered the incident while investigating the incident
  itself.\nNote: Final remediation tasks are always decided by a human analyst. "
id: Phishing - Generic v3
inputs:
- description: The default role to assign the incident to.
  key: Role
  playbookInputQuery: null
  required: true
  value:
    simple: Administrator
- description: |-
    Enables the Search and Delete capability.
    For a malicious email, the "Search and Delete" sub-playbook looks for other instances of the email and deletes them pending analyst approval.
  key: SearchAndDelete
  playbookInputQuery: null
  required: false
  value:
    simple: "False"
- description: |-
    Enables the Block Indicators capability.
    For a malicious email, the "Block Indicators" sub-playbook blocks all malicious indicators in the relevant integrations.
  key: BlockIndicators
  playbookInputQuery: null
  required: false
  value:
    simple: "False"
- description: Determines whether the authenticity of the email should be verified
    using SPF, DKIM, and DMARC.
  key: AuthenticateEmail
  playbookInputQuery: null
  required: false
  value:
    simple: "True"
- description: Set to True to assign only the user that is currently on shift.
  key: OnCall
  playbookInputQuery: null
  required: false
  value:
    simple: "False"
- description: |-
    Determines which product and playbook is used to search and delete the phishing email from user inboxes.
      - Set this to "O365" to use the "O365 - Security And Compliance - Search And Delete" playbook.
      - Set this to "EWS" to use the "Search And Delete Emails - EWS" playbook.
      - Set this to "Gmail" to use the "Search And Delete - Gmail" playbook.
  key: SearchAndDeleteIntegration
  playbookInputQuery: null
  required: false
  value:
    simple: EWS
- description: |-
    Sets the method to delete emails in the "O365 - Security And Compliance - Search And Delete" playbook. Can be "Soft" (recoverable), or "Hard" (unrecoverable). Leave empty to decide manually for each email incident.
    This is only applicable if the SearchAndDeleteIntegration input is set to "O365".
  key: O365DeleteType
  playbookInputQuery: null
  required: false
  value:
    simple: Soft
- description: The exchange location. Determines from where to search and delete emails
    using O365 playbooks. Use the value "All" to search all mailboxes, or use ${incident.emailto}
    to search and delete the email only from the recipient's inbox. Note - Searching
    all mailboxes may take a significant amount of time. - This input is used only
    when searching and deleting emails in O365 and only applies if the SearchAndDeleteIntegration
    input is set to O365.
  key: O365ExchangeLocation
  playbookInputQuery: null
  required: false
  value:
    complex:
      accessor: emailto
      root: incident
- description: Used only when searching and deleting emails in O365. Determines whether
    to include mailboxes other than regular user mailboxes in the compliance search.
  key: O365AllowNotFoundSearchLocations
  playbookInputQuery: null
  required: false
  value:
    simple: "False"
- description: Used only when searching and deleting emails in O365. A comma-separated
    list of mailboxes/distribution groups to exclude when you use the value "All"
    for the O365ExchangeLocation input.
  key: O365ExchangeLocationExclusion
  playbookInputQuery: null
  required: false
  value: {}
- description: Whether to check Microsoft headers for BCL/PCL/SCL scores and set the
    "Severity" and "Email Classification" accordingly.
  key: CheckMicrosoftHeaders
  playbookInputQuery: null
  required: false
  value:
    simple: "True"
- description: A CSV list of internal domains. The list is used to determine whether
    an email address is internal or external.
  key: InternalDomains
  playbookInputQuery: null
  required: false
  value: {}
- description: Determines whether to use the "URL Detonation" playbook. Detonating
    a URL may take a few minutes.
  key: DetonateURL
  playbookInputQuery: null
  required: false
  value:
    simple: "False"
- description: |-
    This input is used in the "Entity Enrichment - Phishing v2" playbook.
    A list of internal IP ranges to check IP addresses against. The list should be provided in CIDR notation, separated by commas. An example of a list of ranges is: "172.16.0.0/12,10.0.0.0/8,192.168.0.0/16" (without quotes). If a list is not provided, uses the default list provided in the IsIPInRanges script (the known IPv4 private address ranges).
  key: InternalRange
  playbookInputQuery: null
  required: false
  value: {}
- description: Optional - the name of a pre-trained phishing model to predict phishing
    type using machine learning.
  key: PhishingModelName
  playbookInputQuery: null
  required: false
  value:
    simple: phishing_model
- description: |-
    For forwarded emails. When "True", retrieves the original email in the thread.

    You must have the necessary permissions in your email service to execute global search.

    - For EWS: eDiscovery
    - For Gmail: Google Apps Domain-Wide Delegation of Authority
    - For MSGraph: As described in these links
    https://docs.microsoft.com/en-us/graph/api/message-get
    https://docs.microsoft.com/en-us/graph/api/user-list-messages
  key: GetOriginalEmail
  playbookInputQuery: null
  required: false
  value: {}
- description: |-
    The number of URLs to extract from the email HTML and analyze in the "DBotPredictURLPhishing" automation.
    This automation runs several checks to determine the score of the URLs found in the email, sets a verdict for URLs found as "Suspicious" or "Malicious", and adds these URLs as indicators. Based on the verdict, the incident severity is set (Medium for "Suspicious" and High for "Malicious").
    Note:
    - You need to install the "Phishing URL" pack to use this automation.
    - False/True positives are possible.
    - This automation may take a few minutes to run.
    - To increase result accuracy, it is recommended to install and enable the "Whois" pack (optional).
  key: DBotPredictURLPhishingURLsNumber
  playbookInputQuery: null
  required: false
  value:
    simple: "3"
name: Phishing - Generic v3
outputs: []
starttaskid: "0"
system: true
tasks:
  "0":
    continueonerrortype: ""
    id: "0"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "39"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 664506b8-2e32-418e-8366-975615da1945
      iscommand: false
      name: ""
      version: -1
    taskid: 664506b8-2e32-418e-8366-975615da1945
    timertriggers: []
    type: start
    view: |-
      {
        "position": {
          "x": -497.5,
          "y": -690
        }
      }
  "2":
    continueonerrortype: ""
    id: "2"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "15"
    note: false
    quietmode: 0
    reputationcalc: 1
    scriptarguments:
      onCall:
        complex:
          root: inputs.OnCall
          transformers:
          - operator: toLowerCase
      roles:
        complex:
          root: inputs.Role
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Assigns the incident to an analyst based on the analyst's organizational
        role.
      id: 33c75a16-88d7-444b-8d04-8ab0af2bbe4d
      iscommand: false
      name: Assign to analyst
      script: AssignAnalystToIncident
      type: regular
      version: -1
    taskid: 33c75a16-88d7-444b-8d04-8ab0af2bbe4d
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -260,
          "y": 2560
        }
      }
  "7":
    continueonerrortype: ""
    id: "7"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "33"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Reviews the incident to determine if the email that the user reported
        is malicious.
      id: eb780ec7-557a-46ae-869d-582ca2547e62
      iscommand: false
      name: Manually review the incident
      type: regular
      version: -1
    taskid: eb780ec7-557a-46ae-869d-582ca2547e62
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -770,
          "y": 3055
        }
      }
  "8":
    continueonerrortype: ""
    id: "8"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "29"
    note: false
    quietmode: 0
    reputationcalc: 1
    separatecontext: false
    skipunavailable: false
    task:
      brand: Builtin
      description: Closes the investigation.
      id: ab61f1da-1a47-456b-85b8-ba23a7df2f38
      iscommand: true
      name: Close investigation
      script: Builtin|||closeInvestigation
      type: regular
      version: -1
    taskid: ab61f1da-1a47-456b-85b8-ba23a7df2f38
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -897.5,
          "y": 5360
        }
      }
  "11":
    continueonerrortype: ""
    id: "11"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "26"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: d3bc5192-aeef-474d-8c51-25102d6ed901
      iscommand: false
      name: Triage
      type: title
      version: -1
    taskid: d3bc5192-aeef-474d-8c51-25102d6ed901
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": -497.5,
          "y": 300
        }
      }
  "12":
    continueonerrortype: ""
    id: "12"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "85"
    note: false
    quietmode: 0
    reputationcalc: 1
    scriptarguments:
      key:
        simple: ReporterAddress
      value:
        complex:
          accessor: '[0]'
          root: ExtractedIndicators.Email
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Stores the email address of the user that reported the incident.
      id: 0773d4ad-fe7a-451a-821e-805434cdc5e6
      iscommand: false
      name: Store the email address of the reporting user
      script: Set
      type: regular
      version: -1
    taskid: 0773d4ad-fe7a-451a-821e-805434cdc5e6
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -497.5,
          "y": -75
        }
      }
  "13":
    continueonerrortype: ""
    id: "13"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "56"
    note: false
    quietmode: 0
    reputationcalc: 1
    scriptarguments:
      body:
        simple: "Hi ${.=function(val) { if(!(val.Account.length > 1)) return val.ReporterAddress;
          var reporter = val.ReporterAddress; var account = val.Account && val.Account.filter(function(acc)
          { return acc.DisplayName && (acc.Email  === reporter || Array.isArray(acc.Email)
          && acc.Email.indexOf(reporter) > -1) }); return account && account[0] &&
          account[0].DisplayName[0] || reporter || ''; }(val)},\nWe've received your
          email and are investigating.\nPlease do not touch the email until further
          notice.\n\nCordially, \n  Your friendly neighborhood security team"
      subject:
        simple: 'Re: Phishing Investigation - ${incident.name}'
      to:
        complex:
          root: ReporterAddress
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: |
        Sends an auto-response to the user reporting the incident that the incident was received and is being handled.
      id: 1f37541b-cd13-4a37-8f9e-169b63825248
      iscommand: true
      name: Acknowledge incident was received
      script: '|||send-mail'
      type: regular
      version: -1
    taskid: 1f37541b-cd13-4a37-8f9e-169b63825248
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 942.5,
          "y": 630
        }
      }
  "15":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              simple: incident.severity
          operator: greaterThanOrEqual
          right:
            value:
              simple: "2"
      label: Malicious
    continueonerrortype: ""
    id: "15"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "31"
      Malicious:
      - "30"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Determines if the email is malicious based on the calculated severity.
      id: 4f4a45c7-24f0-47d7-8443-d5b5b6230baf
      iscommand: false
      name: Is the email malicious?
      type: condition
      version: -1
    taskid: 4f4a45c7-24f0-47d7-8443-d5b5b6230baf
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": -260,
          "y": 2735
        }
      }
  "16":
    continueonerrortype: ""
    id: "16"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "8"
    note: false
    quietmode: 0
    reputationcalc: 1
    scriptarguments:
      body:
        simple: |-
          Hi ${.=function(val) { if(!(val.Account.length > 1)) return val.ReporterAddress; var reporter = val.ReporterAddress; var account = val.Account && val.Account.filter(function(acc) { return acc.DisplayName && (acc.Email  === reporter || Array.isArray(acc.Email) && acc.Email.indexOf(reporter) > -1) }); return account && account[0] && account[0].DisplayName[0] || reporter || ''; }(val)},
          We've concluded that the email you forwarded to us is safe. In case you think the verdict is not accurate and the email is suspicious, please contact our SOC team.
          Thank you for your alertness and your participation in keeping our organization secure.

          Cordially,
            Your security team
      subject:
        simple: 'Re: Phishing Investigation - ${incident.name}'
      to:
        simple: ${ReporterAddress}
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Sends an email to the user explaining that the email they reported
        is safe.
      id: 84262d62-b6b4-48b5-8c98-eac47e0e29cb
      iscommand: true
      name: Update the user that the reported email is safe
      script: '|||send-mail'
      type: regular
      version: -1
    taskid: 84262d62-b6b4-48b5-8c98-eac47e0e29cb
    timertriggers:
    - action: stop
      fieldname: detectionsla
    type: regular
    view: |-
      {
        "position": {
          "x": -1230,
          "y": 3610
        }
      }
  "18":
    continueonerrortype: ""
    id: "18"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "53"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 22acf235-b57c-4f78-8786-892dda955719
      iscommand: false
      name: Engage with User
      type: title
      version: -1
    taskid: 22acf235-b57c-4f78-8786-892dda955719
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": 940,
          "y": 300
        }
      }
  "22":
    continueonerrortype: ""
    id: "22"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "52"
    note: false
    quietmode: 0
    separatecontext: true
    skipunavailable: false
    task:
      brand: ""
      id: 4ffd4fc5-c549-406b-8d6d-7f6a613a6c80
      iscommand: false
      name: Detonate File - Generic
      playbookId: Detonate File - Generic
      type: playbook
      version: -1
    taskid: 4ffd4fc5-c549-406b-8d6d-7f6a613a6c80
    timertriggers: []
    type: playbook
    view: |-
      {
        "position": {
          "x": 197.5,
          "y": 615
        }
      }
  "26":
    continueonerrortype: ""
    id: "26"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    loop:
      exitCondition: ""
      iscommand: false
      max: 100
      scriptArguments:
        UserID:
          complex:
            accessor: emaifrom
            root: incident
            transformers:
            - args:
                regex:
                  value:
                    simple: (?i).*<([A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,})>
                replaceWith:
                  value:
                    simple: $1
              operator: replaceMatch
      wait: 1
    nexttasks:
      '#none#':
      - "55"
      - "22"
      - "88"
      - "137"
    note: false
    quietmode: 0
    scriptarguments:
      Email:
        complex:
          accessor: emailto
          root: incident
      EmailCC:
        complex:
          accessor: emailcc
          root: incident
      EmailFormat:
        complex:
          accessor: emailformat
          root: incident
      EmailFrom:
        complex:
          accessor: emailfrom
          root: incident
      EmailHeaders:
        complex:
          accessor: phishingreporteremailheaders
          root: incident
      EmailHtml:
        complex:
          accessor: emailhtml
          root: incident
      EmailSubject:
        complex:
          accessor: emailsubject
          root: incident
      EmailText:
        complex:
          accessor: emailbody
          root: incident
      File:
        complex:
          root: File
      GetOriginalEmail:
        complex:
          root: inputs.GetOriginalEmail
      UserID:
        complex:
          root: ReporterAddress
    separatecontext: true
    skipunavailable: false
    task:
      brand: ""
      description: |
        This playbook adds email details to the relevant context entities and handles the case where original emails are attached.

        This v2 playbook:
        - Uses incident fields and not incident labels.
        - Provides separate paths to "Phishing Alerts".
        - Uses the new **Get Original Email - Generic v2** playbook to retrieve original emails as EML files from the following integrations:
            * EWS v2
            * Microsoft Graph Mail integration
            * Gmail
            * FireEye EX and FireEye CM
            * Proofpoint Protection Server
            * Agari Phishing Defense
            * Mimecast
          This helps parse the email artifacts more efficiently.
      id: 35e48544-2ec5-4698-88e9-071aa386e46e
      iscommand: false
      name: Process Email - Generic v2
      playbookId: Process Email - Generic v2
      type: playbook
      version: -1
    taskid: 35e48544-2ec5-4698-88e9-071aa386e46e
    timertriggers: []
    type: playbook
    view: |-
      {
        "position": {
          "x": -497.5,
          "y": 440
        }
      }
  "27":
    continueonerrortype: ""
    id: "27"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "97"
      - "98"
      - "99"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 4905affa-7530-4f62-869d-d5066f89c54b
      iscommand: false
      name: Remediation
      type: title
      version: -1
    taskid: 4905affa-7530-4f62-869d-d5066f89c54b
    timertriggers:
    - action: start
      fieldname: remediationsla
    type: title
    view: |-
      {
        "position": {
          "x": 352.5,
          "y": 3850
        }
      }
  "28":
    continueonerrortype: ""
    id: "28"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    loop:
      exitCondition: ""
      iscommand: false
      max: 100
      wait: 1
    nexttasks:
      '#none#':
      - "43"
    note: false
    quietmode: 0
    scriptarguments:
      AttachmentName:
        complex:
          accessor: attachmentname
          root: incident
      From:
        complex:
          root: PhishingSender
      ? |
        O365AllowNotFoundExchangeLocations
      : simple: "false"
      O365DeleteType:
        complex:
          root: inputs.O365DeleteType
      O365Description:
        simple: Search for potential phishing
      O365ExchangeLocation:
        simple: All
      O365ExchangeLocationExclusion:
        complex:
          root: inputs.O365ExchangeLocationExclusion
      O365KQL:
        simple: from:${incident.emailfrom} AND subject:${incident.emailsubject}
      SearchAndDeleteIntegration:
        complex:
          root: inputs.SearchAndDeleteIntegration
      Subject:
        complex:
          accessor: emailsubject
          root: incident
      To:
        complex:
          accessor: emailto
          root: incident
    separatecontext: true
    skipunavailable: false
    task:
      brand: ""
      description: 'This playbook searches and deletes emails with similar attributes
        of a malicious email using one of the following integrations: * EWS * Office
        365 * Gmail * Agari Phishing Defense'
      id: 3437bc3e-7d13-4698-897f-0da0f1093f63
      iscommand: false
      name: Search And Delete Emails - Generic v2
      playbookId: Search And Delete Emails - Generic v2
      type: playbook
      version: -1
    taskid: 3437bc3e-7d13-4698-897f-0da0f1093f63
    timertriggers: []
    type: playbook
    view: |-
      {
        "position": {
          "x": 352.5,
          "y": 4945
        }
      }
  "29":
    continueonerrortype: ""
    id: "29"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 828b23a9-1c88-44ed-85ee-6fdcb892496a
      iscommand: false
      name: Done
      type: title
      version: -1
    taskid: 828b23a9-1c88-44ed-85ee-6fdcb892496a
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": -897.5,
          "y": 5545
        }
      }
  "30":
    continueonerrortype: ""
    id: "30"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "149"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 2b844949-4f2a-4663-8152-8c11b41c290a
      iscommand: false
      name: Email Is Malicious
      type: title
      version: -1
    taskid: 2b844949-4f2a-4663-8152-8c11b41c290a
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 2910
        }
      }
  "31":
    continueonerrortype: ""
    id: "31"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "7"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 0e005247-eb1b-4512-8674-7717c90104dd
      iscommand: false
      name: Undetermined
      type: title
      version: -1
    taskid: 0e005247-eb1b-4512-8674-7717c90104dd
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": -770,
          "y": 2910
        }
      }
  "33":
    continueonerrortype: ""
    id: "33"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      "No":
      - "151"
      "yes":
      - "149"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Is the email that the user reported malicious?
      id: 1f049b2b-ba22-45c2-8330-93acbd3850ef
      iscommand: false
      name: Is the email malicious?
      type: condition
      version: -1
    taskid: 1f049b2b-ba22-45c2-8330-93acbd3850ef
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": -770,
          "y": 3220
        }
      }
  "34":
    continueonerrortype: ""
    id: "34"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "43"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: "To manually remediate a phishing incident you need to:\n1. Search
        for and delete similar emails.\n2. Inform the organization about the threat.\n3.
        Hunt relevant IOCs.\n4. Update proxies and firewalls as necessary.\n5. Block
        the malicious sender/domain in the mail-gateway. "
      id: 3be84614-c9e3-436c-8d1e-96920a53e250
      iscommand: false
      name: Manually remediate  the incident
      type: regular
      version: -1
    taskid: 3be84614-c9e3-436c-8d1e-96920a53e250
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -277.5,
          "y": 4180
        }
      }
  "36":
    conditions:
    - condition:
      - - ignorecase: true
          left:
            iscontext: true
            value:
              simple: inputs.SearchAndDelete
          operator: isEqualString
          right:
            value:
              simple: "True"
      label: "Yes"
    continueonerrortype: ""
    id: "36"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "43"
      "Yes":
      - "152"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Checks whether the **SearchAndDelete** playbook input is set to
        True.
      id: f0762650-4a77-49d2-8030-64061db72ac0
      iscommand: false
      name: Should emails be searched and deleted?
      type: condition
      version: -1
    taskid: f0762650-4a77-49d2-8030-64061db72ac0
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 352.5,
          "y": 4190
        }
      }
  "37":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              complex:
                filters:
                - - ignorecase: true
                    left:
                      iscontext: true
                      value:
                        simple: inputs.BlockIndicators
                    operator: isEqualString
                    right:
                      value:
                        simple: "True"
                root: inputs.BlockIndicators
          operator: isExists
      label: "yes"
    continueonerrortype: ""
    id: "37"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "43"
      "yes":
      - "91"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Checks whether the **BlockIndicators** playbook input is set to
        True.
      id: e7a7fd40-2e9e-4560-85c9-f67161231e82
      iscommand: false
      name: Should indicators be blocked automatically?
      type: condition
      version: -1
    taskid: e7a7fd40-2e9e-4560-85c9-f67161231e82
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 1000,
          "y": 4190
        }
      }
  "39":
    continueonerrortype: ""
    id: "39"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "147"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 7f572705-6406-4e7f-8eca-be825d5205b8
      iscommand: false
      name: Start Detection Timer
      type: title
      version: -1
    taskid: 7f572705-6406-4e7f-8eca-be825d5205b8
    timertriggers:
    - action: start
      fieldname: detectionsla
    type: title
    view: |-
      {
        "position": {
          "x": -497.5,
          "y": -550
        }
      }
  "43":
    continueonerrortype: ""
    id: "43"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "8"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 7e8e9dd5-d8bf-49b1-8f93-23dc2d35b8eb
      iscommand: false
      name: Stop Remediation Timer
      type: title
      version: -1
    taskid: 7e8e9dd5-d8bf-49b1-8f93-23dc2d35b8eb
    timertriggers:
    - action: stop
      fieldname: remediationsla
    type: title
    view: |-
      {
        "position": {
          "x": 690,
          "y": 5210
        }
      }
  "52":
    continueonerrortype: ""
    id: "52"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "92"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 389b4de3-6d86-4e74-897c-3fcf2df5463d
      iscommand: false
      name: Indicator Enrichment
      type: title
      version: -1
    taskid: 389b4de3-6d86-4e74-897c-3fcf2df5463d
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": -260,
          "y": 1130
        }
      }
  "53":
    continueonerrortype: ""
    id: "53"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    loop:
      exitCondition: ""
      iscommand: false
      max: 0
      wait: 1
    nexttasks:
      '#none#':
      - "13"
    note: false
    quietmode: 0
    scriptarguments:
      Domain:
        simple: ' '
      Email:
        complex:
          root: ReporterAddress
          transformers:
          - operator: uniq
      InternalDomains:
        complex:
          root: inputs.InternalDomains
          transformers:
          - operator: uniq
    separatecontext: true
    skipunavailable: false
    task:
      brand: ""
      description: |-
        This playbook enriches email addresses by:
        - Getting information from Active Directory for internal addresses.
        - Getting the domain-squatting reputation for external addresses.
      id: 163f0f23-d373-4f5d-8da6-a5ad86598576
      iscommand: false
      name: Email Address Enrichment - Generic v2.1
      playbookId: Email Address Enrichment - Generic v2.1
      type: playbook
      version: -1
    taskid: 163f0f23-d373-4f5d-8da6-a5ad86598576
    timertriggers: []
    type: playbook
    view: |-
      {
        "position": {
          "x": 942.5,
          "y": 450
        }
      }
  "55":
    continueonerrortype: ""
    id: "55"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "52"
      - "143"
    note: false
    quietmode: 0
    separatecontext: true
    skipunavailable: false
    task:
      brand: ""
      description: |-
        This playbook extracts indicators from a file.
        Supported file types:
        - CSV
        - PDF
        - TXT
        - HTM, HTML
        - DOC, DOCX
        - PPT
        - PPTX
        - RTF
        - XLS
        - XLSX
        - XML
      id: 6b30366b-980c-4529-8823-dd21e6d4dfff
      iscommand: false
      name: Extract Indicators From File - Generic v2
      playbookId: Extract Indicators From File - Generic v2
      type: playbook
      version: -1
    taskid: 6b30366b-980c-4529-8823-dd21e6d4dfff
    timertriggers: []
    type: playbook
    view: |-
      {
        "position": {
          "x": -727.5,
          "y": 615
        }
      }
  "56":
    continueonerrortype: ""
    id: "56"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "101"
      - "80"
      - "131"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 13e831d2-431e-4927-814f-b4fa631f51cf
      iscommand: false
      name: Investigation
      type: title
      version: -1
    taskid: 13e831d2-431e-4927-814f-b4fa631f51cf
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": -260,
          "y": 1480
        }
      }
  "79":
    conditions:
    - condition:
      - - ignorecase: true
          left:
            iscontext: true
            value:
              simple: inputs.AuthenticateEmail
          operator: isEqualString
          right:
            value:
              simple: "True"
      - - left:
            iscontext: true
            value:
              complex:
                accessor: HeadersMap
                root: Email
          operator: isExists
      label: "yes"
    continueonerrortype: ""
    id: "79"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "84"
      "yes":
      - "82"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Checks whether the email should be authenticated using DKIM, SPF,
        and DMARC. This checks if "AuthenticateEmail" output is set to "True" and
        if there are headers from an email to authenticate.
      id: 991adce8-f301-48b8-8fce-460c9e0756f6
      iscommand: false
      name: Should the email be authenticated?
      type: condition
      version: -1
    taskid: 991adce8-f301-48b8-8fce-460c9e0756f6
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 390,
          "y": 1765
        }
      }
  "80":
    continueonerrortype: ""
    id: "80"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "79"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: d4e9aa9c-3bfc-4e4f-8a75-8e8a112f0b93
      iscommand: false
      name: Email Authenticity Check
      type: title
      version: -1
    taskid: d4e9aa9c-3bfc-4e4f-8a75-8e8a112f0b93
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": 390,
          "y": 1620
        }
      }
  "82":
    continueonerrortype: ""
    id: "82"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "83"
    note: false
    quietmode: 0
    reputationcalc: 1
    scriptarguments:
      headers:
        complex:
          accessor: Headers
          root: Email
          transformers:
          - operator: uniq
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Checks the authenticity of an email based on the email's SPF, DMARC,
        and DKIM.
      id: 442a2d4c-6537-4098-8a36-76d8783c6c25
      iscommand: false
      name: Authenticate email
      script: CheckEmailAuthenticity
      type: regular
      version: -1
    taskid: 442a2d4c-6537-4098-8a36-76d8783c6c25
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 392.5,
          "y": 1950
        }
      }
  "83":
    continueonerrortype: ""
    id: "83"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "84"
    note: false
    quietmode: 0
    reputationcalc: 1
    scriptarguments:
      emailauthenticitycheck:
        complex:
          accessor: AuthenticityCheck
          root: Email
          transformers:
          - args:
              limit: {}
              replaceWith:
                value:
                  simple: Undetermined
              toReplace:
                value:
                  simple: undetermined
            operator: replace
          - args:
              limit: {}
              replaceWith:
                value:
                  simple: Pass
              toReplace:
                value:
                  simple: pass
            operator: replace
          - args:
              limit: {}
              replaceWith:
                value:
                  simple: Fail
              toReplace:
                value:
                  simple: fail
            operator: replace
          - args:
              limit: {}
              replaceWith:
                value:
                  simple: Suspicious
              toReplace:
                value:
                  simple: suspicious
            operator: replace
    separatecontext: false
    skipunavailable: false
    task:
      brand: Builtin
      description: Saves the email authenticity verdict in an incident field.
      id: 95d0d3be-5770-442e-884c-8f5c6ca4394f
      iscommand: true
      name: Save authenticity check result to incident field
      script: Builtin|||setIncident
      type: regular
      version: -1
    taskid: 95d0d3be-5770-442e-884c-8f5c6ca4394f
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 392.5,
          "y": 2145
        }
      }
  "84":
    continueonerrortype: ""
    id: "84"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "2"
    note: false
    quietmode: 0
    separatecontext: true
    skipunavailable: false
    task:
      brand: ""
      id: 941a16db-d34e-4100-8083-66d74c83e595
      iscommand: false
      name: Calculate Severity - Generic v2
      playbookId: Calculate Severity - Generic v2
      type: playbook
      version: -1
    taskid: 941a16db-d34e-4100-8083-66d74c83e595
    timertriggers: []
    type: playbook
    view: |-
      {
        "position": {
          "x": -260,
          "y": 2350
        }
      }
  "85":
    continueonerrortype: ""
    id: "85"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "18"
      - "11"
    note: false
    quietmode: 0
    reputationcalc: 1
    scriptarguments:
      reporteremailaddress:
        complex:
          root: ReporterAddress
    separatecontext: false
    skipunavailable: false
    task:
      brand: Builtin
      description: Saves the email address of the email reporter in an incident field.
      id: 9b218556-45e5-42a2-855c-54c5e63e82a6
      iscommand: true
      name: Save reporter email address in field
      script: Builtin|||setIncident
      type: regular
      version: -1
    taskid: 9b218556-45e5-42a2-855c-54c5e63e82a6
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -497.5,
          "y": 100
        }
      }
  "87":
    continueonerror: true
    continueonerrortype: ""
    id: "87"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "90"
    note: false
    quietmode: 0
    reputationcalc: 1
    scriptarguments:
      emailBody:
        complex:
          accessor: Text
          root: Email
          transformers:
          - operator: uniq
      emailBodyHTML:
        complex:
          accessor: HTML
          root: Email
          transformers:
          - operator: uniq
      emailSubject:
        complex:
          accessor: Subject
          root: Email
          transformers:
          - operator: uniq
      modelName:
        complex:
          root: inputs.PhishingModelName
      returnError:
        simple: "false"
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Predicts the specific phishing mail type using a pre-trained machine
        learning model, and highlights the most important words used in the classification
        decision.
      id: bd41a165-d0e6-4798-8e02-c0a530b274d9
      iscommand: false
      name: Predict phishing type using pre-trained phishing model
      script: DBotPredictPhishingWords
      type: regular
      version: -1
    taskid: bd41a165-d0e6-4798-8e02-c0a530b274d9
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -1832.5,
          "y": 1005
        }
      }
  "88":
    continueonerrortype: ""
    id: "88"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "142"
      - "143"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: b12d61c1-f30b-49d8-8e25-07a83ffb06d6
      iscommand: false
      name: Machine Learning
      type: title
      version: -1
    taskid: b12d61c1-f30b-49d8-8e25-07a83ffb06d6
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": -1522.5,
          "y": 615
        }
      }
  "89":
    continueonerrortype: ""
    id: "89"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "84"
    note: false
    quietmode: 0
    reputationcalc: 1
    scriptarguments:
      dbotprediction:
        complex:
          accessor: Label
          root: DBotPredictPhishingWords
          transformers:
          - operator: uniq
      dbotpredictionprobability:
        complex:
          accessor: Probability
          root: DBotPredictPhishingWords
          transformers:
          - operator: uniq
      dbottextsuggestionhighlighted:
        complex:
          accessor: TextTokensHighlighted
          root: DBotPredictPhishingWords
          transformers:
          - operator: uniq
    separatecontext: false
    skipunavailable: false
    task:
      brand: Builtin
      description: Updates incident fields with the machine learning phishing model
        predictions.
      id: d906c498-607e-47c1-87ee-dc15f246665d
      iscommand: true
      name: Update incident with predictions
      script: Builtin|||setIncident
      type: regular
      version: -1
    taskid: d906c498-607e-47c1-87ee-dc15f246665d
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -1572.5,
          "y": 1465
        }
      }
  "90":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              complex:
                accessor: Label
                root: DBotPredictPhishingWords
          operator: isNotEmpty
      - - left:
            iscontext: true
            value:
              complex:
                accessor: Probability
                root: DBotPredictPhishingWords
          operator: isNotEmpty
      - - left:
            iscontext: true
            value:
              complex:
                accessor: TextTokensHighlighted
                root: DBotPredictPhishingWords
          operator: isNotEmpty
      label: "yes"
    continueonerrortype: ""
    id: "90"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "84"
      "yes":
      - "89"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Checks whether the model predicted the phishing type.
      id: 945447ab-cc25-42b8-844c-a0d30c09834e
      iscommand: false
      name: Did the model predict the phishing type?
      type: condition
      version: -1
    taskid: 945447ab-cc25-42b8-844c-a0d30c09834e
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": -1832.5,
          "y": 1235
        }
      }
  "91":
    continueonerrortype: ""
    id: "91"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    loop:
      exitCondition: ""
      iscommand: false
      max: 0
      wait: 1
    nexttasks:
      '#none#':
      - "43"
    note: false
    quietmode: 0
    scriptarguments:
      AutoCommit:
        simple: "No"
      CustomBlockRule:
        simple: "True"
      EmailToBlock:
        complex:
          accessor: Indicator
          filters:
          - - ignorecase: true
              left:
                iscontext: true
                value:
                  simple: DBotScore.Type
              operator: isEqualString
              right:
                value:
                  simple: email
          - - left:
                iscontext: true
                value:
                  simple: DBotScore.Score
              operator: greaterThanOrEqual
              right:
                value:
                  simple: "3"
          root: DBotScore
          transformers:
          - operator: uniq
      IP:
        complex:
          accessor: Indicator
          filters:
          - - ignorecase: true
              left:
                iscontext: true
                value:
                  simple: DBotScore.Type
              operator: isEqualString
              right:
                value:
                  simple: ip
          - - left:
                iscontext: true
                value:
                  simple: DBotScore.Score
              operator: greaterThanOrEqual
              right:
                value:
                  simple: "3"
          root: DBotScore
          transformers:
          - operator: uniq
      MD5:
        complex:
          accessor: Indicator
          filters:
          - - left:
                iscontext: true
                value:
                  simple: DBotScore.Indicator
              operator: stringHasLength
              right:
                value:
                  simple: "32"
          - - left:
                iscontext: true
                value:
                  simple: DBotScore.Score
              operator: greaterThanOrEqual
              right:
                value:
                  simple: "3"
          - - ignorecase: true
              left:
                iscontext: true
                value:
                  simple: DBotScore.Type
              operator: isEqualString
              right:
                value:
                  simple: file
            - ignorecase: true
              left:
                iscontext: true
                value:
                  simple: DBotScore.Type
              operator: isEqualString
              right:
                value:
                  simple: hash
          root: DBotScore
          transformers:
          - operator: uniq
      SHA256:
        complex:
          accessor: Indicator
          filters:
          - - left:
                iscontext: true
                value:
                  simple: DBotScore.Indicator
              operator: stringHasLength
              right:
                value:
                  simple: "64"
          - - left:
                iscontext: true
                value:
                  simple: DBotScore.Score
              operator: greaterThanOrEqual
              right:
                value:
                  simple: "3"
          - - ignorecase: true
              left:
                iscontext: true
                value:
                  simple: DBotScore.Type
              operator: isEqualString
              right:
                value:
                  simple: file
            - ignorecase: true
              left:
                iscontext: true
                value:
                  simple: DBotScore.Type
              operator: isEqualString
              right:
                value:
                  simple: hash
          root: DBotScore
          transformers:
          - operator: uniq
      URL:
        complex:
          accessor: Indicator
          filters:
          - - ignorecase: true
              left:
                iscontext: true
                value:
                  simple: DBotScore.Type
              operator: isEqualString
              right:
                value:
                  simple: url
          - - left:
                iscontext: true
                value:
                  simple: DBotScore.Score
              operator: greaterThanOrEqual
              right:
                value:
                  simple: "3"
          root: DBotScore
          transformers:
          - operator: uniq
      Username:
        complex:
          accessor: Indicator
          filters:
          - - ignorecase: true
              left:
                iscontext: true
                value:
                  simple: DBotScore.Type
              operator: isEqualString
              right:
                value:
                  simple: username
          - - left:
                iscontext: true
                value:
                  simple: DBotScore.Score
              operator: greaterThanOrEqual
              right:
                value:
                  simple: "3"
          root: DBotScore
          transformers:
          - operator: uniq
    separatecontext: true
    skipunavailable: false
    task:
      brand: ""
      description: |+
        This playbook blocks malicious indicators using all enabled integrations, with the following sub-playbooks:

        - Block URL - Generic
        - Block Account - Generic
        - Block IP - Generic v2
        - Block File - Generic v2

      id: 7cd06dea-8fac-47cc-809b-427c05e21ce1
      iscommand: false
      name: Block Indicators - Generic v2
      playbookId: Block Indicators - Generic v2
      type: playbook
      version: -1
    taskid: 7cd06dea-8fac-47cc-809b-427c05e21ce1
    timertriggers: []
    type: playbook
    view: |-
      {
        "position": {
          "x": 1000,
          "y": 4945
        }
      }
  "92":
    continueonerrortype: ""
    id: "92"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    loop:
      exitCondition: ""
      iscommand: false
      max: 0
      scriptArguments:
        Email:
          complex:
            filters:
            - - left:
                  iscontext: true
                  value:
                    simple: Account.Email.Address
                operator: isNotEqualString
                right:
                  iscontext: true
                  value:
                    simple: ReporterAddress
            root: Account.Email.Address
            transformers:
            - operator: uniq
      wait: 1
    nexttasks:
      '#none#':
      - "56"
    note: false
    quietmode: 0
    scriptarguments:
      Domain:
        complex:
          accessor: Name
          root: Domain
          transformers:
          - operator: uniq
      Email:
        complex:
          filters:
          - - left:
                iscontext: true
                value:
                  simple: Account.Email.Address
              operator: isNotEqualString
              right:
                iscontext: true
                value:
                  simple: incident.reporteremailaddress
          root: Account.Email.Address
          transformers:
          - operator: uniq
      Hostname:
        complex:
          accessor: Hostname
          root: Endpoint
          transformers:
          - operator: uniq
      IP:
        complex:
          accessor: Address
          root: IP
          transformers:
          - operator: uniq
      InternalDomains:
        complex:
          root: inputs.InternalDomains
      InternalRange:
        complex:
          root: inputs.InternalRange
      MD5:
        complex:
          accessor: MD5
          root: File
          transformers:
          - operator: uniq
      ResolveIP:
        simple: "False"
      SHA1:
        complex:
          accessor: SHA1
          root: File
          transformers:
          - operator: uniq
      SHA256:
        complex:
          accessor: SHA256
          root: File
          transformers:
          - operator: uniq
      URL:
        complex:
          accessor: Data
          root: URL
          transformers:
          - operator: uniq
      Username:
        complex:
          accessor: Username
          root: Account
          transformers:
          - operator: uniq
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Enrich entities using one or more integrations
      id: 769ef3cd-03f6-4a45-8759-74d100294283
      iscommand: false
      name: Entity Enrichment - Phishing v2
      playbookId: Entity Enrichment - Phishing v2
      type: playbook
      version: -1
    taskid: 769ef3cd-03f6-4a45-8759-74d100294283
    timertriggers: []
    type: playbook
    view: |-
      {
        "position": {
          "x": -260,
          "y": 1270
        }
      }
  "97":
    continueonerrortype: ""
    id: "97"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "37"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 8990d67e-e453-42cc-8920-031efeaef405
      iscommand: false
      name: Block Indicators
      type: title
      version: -1
    taskid: 8990d67e-e453-42cc-8920-031efeaef405
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": 1000,
          "y": 4040
        }
      }
  "98":
    continueonerrortype: ""
    id: "98"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "36"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: da2a3bb1-52b6-42bd-8d39-00572dc998ff
      iscommand: false
      name: Search & Delete Email
      type: title
      version: -1
    taskid: da2a3bb1-52b6-42bd-8d39-00572dc998ff
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": 352.5,
          "y": 4040
        }
      }
  "99":
    continueonerrortype: ""
    id: "99"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "34"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 31f66049-7772-4d2e-858b-a3fa59232296
      iscommand: false
      name: Manual Remediation
      type: title
      version: -1
    taskid: 31f66049-7772-4d2e-858b-a3fa59232296
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": -277.5,
          "y": 4040
        }
      }
  "101":
    continueonerrortype: ""
    id: "101"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "126"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 0c94b64e-114d-4804-83ad-2d8f1b471e85
      iscommand: false
      name: Email Campaign Search
      type: title
      version: -1
    taskid: 0c94b64e-114d-4804-83ad-2d8f1b471e85
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": -260,
          "y": 1620
        }
      }
  "126":
    continueonerrortype: ""
    id: "126"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    loop:
      exitCondition: ""
      iscommand: false
      max: 100
      wait: 1
    nexttasks:
      '#none#':
      - "84"
    note: false
    quietmode: 0
    scriptarguments:
      AutomaticallyLinkIncidents:
        simple: "True"
    separatecontext: true
    skipunavailable: true
    task:
      brand: ""
      description: |-
        This playbook is used to find, create, and manage phishing campaigns. When a number of similar phishing incidents exist in the system, the playbook can be used to:
        1. Find and tie together incidents that are related to the same phishing attack (a phishing campaign).
        2. Search for an existing Phishing Campaign incident or create a new one for the tied phishing incidents.
        3. Link all detected phishing incidents to the Phishing Campaign incident that was found or created previously.
        4. Update the Phishing Campaign incident with the latest data about the campaign, and update all related phishing incidents to indicate that they are part of the campaign.
      id: 26f3e34a-0db6-4961-854f-78a5b566ae72
      iscommand: false
      name: Detect & Manage Phishing Campaigns
      playbookName: Detect & Manage Phishing Campaigns
      type: playbook
      version: -1
    taskid: 26f3e34a-0db6-4961-854f-78a5b566ae72
    timertriggers: []
    type: playbook
    view: |-
      {
        "position": {
          "x": -260,
          "y": 1755
        }
      }
  "131":
    continueonerrortype: ""
    id: "131"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "132"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 15ef4fbb-00ea-4712-8bd5-f271ca9adbe7
      iscommand: false
      name: Microsoft's Headers Check
      type: title
      version: -1
    taskid: 15ef4fbb-00ea-4712-8bd5-f271ca9adbe7
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": -907.5,
          "y": 1620
        }
      }
  "132":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              simple: inputs.CheckMicrosoftHeaders
          operator: isEqualString
          right:
            value:
              simple: "True"
      label: "yes"
    continueonerrortype: ""
    id: "132"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "84"
      "yes":
      - "133"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 374e403a-75c8-456c-8ebf-e76f33c3d501
      iscommand: false
      name: Check Microsoft's Headers?
      type: condition
      version: -1
    taskid: 374e403a-75c8-456c-8ebf-e76f33c3d501
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": -907.5,
          "y": 1755
        }
      }
  "133":
    continueonerrortype: ""
    id: "133"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "84"
    note: false
    quietmode: 0
    separatecontext: true
    skipunavailable: false
    task:
      brand: ""
      description: "This playbook stores the SCL, BCL, and PCL scores if they exist
        to the associated incident fields (Phishing SCL Score, Phishing PCL Score,
        and Phishing BCL Score).\nIt also does the following:\n1) Sets the email classification
        to \"spam\" if the SCL score is equal to or greater than 5.\n2) Sets the incident
        severity according to the playbook inputs (default is: PCL/BCL - Medium, SCL
        - Low). The severity of the incident is set only when one (or more) of the
        following occurs:\n  - PCL (Phishing Confidence Level) score between and including
        4-8: The message content is likely to be phishing.\n  - [BCL](https://docs.microsoft.com/en-us/microsoft-365/security/office-365-security/bulk-complaint-level-values?view=o365-worldwide)
        (Bulk Complaint Level) score between and including 4-7: The message is from
        a bulk sender that generates a mixed number of complaints. \n    For a score
        between and including 8-9: The message is from a bulk sender that generates
        a high number of complaints.\n  - [SCL](https://docs.microsoft.com/en-us/microsoft-365/security/office-365-security/spam-confidence-levels?view=o365-worldwide)
        (Spam Confidence Level) score between and including 5-6: Spam filtering marks
        the message as spam. \n    For a score of 9: Spam filtering marks the message
        as high confidence spam. See [anti-spam stamps](https://docs.microsoft.com/en-us/exchange/antispam-and-antimalware/antispam-protection/antispam-stamps?view=exchserver-2019)."
      id: 3851c221-dae8-4730-8740-fbb041c24fa5
      iscommand: false
      name: Process Microsoft's Anti-Spam Headers
      playbookId: Process Microsoft's Anti-Spam Headers
      type: playbook
      version: -1
    taskid: 3851c221-dae8-4730-8740-fbb041c24fa5
    timertriggers: []
    type: playbook
    view: |-
      {
        "position": {
          "x": -907.5,
          "y": 1950
        }
      }
  "134":
    continueonerrortype: ""
    id: "134"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "12"
    note: false
    quietmode: 0
    scriptarguments:
      text:
        complex:
          accessor: emailfrom
          root: incident
    separatecontext: false
    skipunavailable: false
    task:
      brand: Builtin
      description: commands.local.cmd.extract.indicators
      id: 57d8a1cb-52c1-42ca-86fd-580c8662b71b
      iscommand: true
      name: Extract the email address of the reporting user
      script: Builtin|||extractIndicators
      type: regular
      version: -1
    taskid: 57d8a1cb-52c1-42ca-86fd-580c8662b71b
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -497.5,
          "y": -235
        }
      }
  "135":
    continueonerrortype: ""
    id: "135"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    loop:
      exitCondition: ""
      iscommand: false
      max: 0
      wait: 1
    nexttasks:
      '#none#':
      - "52"
    note: false
    quietmode: 0
    scriptarguments:
      URL:
        complex:
          root: URL
          transformers:
          - operator: uniq
    separatecontext: true
    skipunavailable: false
    task:
      brand: ""
      description: This playbook detonates URLs using active integrations that support
        URL detonation.
      id: f87bb538-66f8-4c41-88df-55459d9ab5bc
      iscommand: false
      name: Detonate URL - Generic
      playbookId: detonate_url_-_generic
      type: playbook
      version: -1
    taskid: f87bb538-66f8-4c41-88df-55459d9ab5bc
    timertriggers: []
    type: playbook
    view: |-
      {
        "position": {
          "x": -260,
          "y": 910
        }
      }
  "137":
    conditions:
    - condition:
      - - ignorecase: true
          left:
            iscontext: true
            value:
              simple: inputs.DetonateURL
          operator: isEqualString
          right:
            value:
              simple: "True"
      label: "yes"
    continueonerrortype: ""
    id: "137"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "52"
      "yes":
      - "135"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 80e1c4c2-b760-493f-8038-a5e7f9201cb2
      iscommand: false
      name: Detonate URL?
      type: condition
      version: -1
    taskid: 80e1c4c2-b760-493f-8038-a5e7f9201cb2
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": -260,
          "y": 615
        }
      }
  "138":
    continueonerrortype: ""
    id: "138"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "139"
    note: false
    quietmode: 0
    scriptarguments:
      text:
        complex:
          accessor: emailfrom
          root: incident
    separatecontext: false
    skipunavailable: false
    task:
      brand: Builtin
      description: commands.local.cmd.extract.indicators
      id: 09acaeac-b9a5-4dee-8941-d635cfca3df6
      iscommand: true
      name: Extract the original email sender address
      script: Builtin|||extractIndicators
      type: regular
      version: -1
    taskid: 09acaeac-b9a5-4dee-8941-d635cfca3df6
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 352.5,
          "y": 4570
        }
      }
  "139":
    continueonerrortype: ""
    id: "139"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "28"
    note: false
    quietmode: 0
    reputationcalc: 1
    scriptarguments:
      key:
        simple: PhishingSender
      value:
        complex:
          accessor: '[0]'
          root: ExtractedIndicators.Email
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Stores the email address of the user that reported the incident.
      id: 7bce4445-b8ca-4034-810b-bb554f91064f
      iscommand: false
      name: Store the email address of the reporting user
      script: Set
      type: regular
      version: -1
    taskid: 7bce4445-b8ca-4034-810b-bb554f91064f
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 352.5,
          "y": 4760
        }
      }
  "140":
    continueonerrortype: ""
    id: "140"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "84"
    note: false
    quietmode: 0
    reputationcalc: 2
    scriptarguments:
      emailHTML:
        complex:
          accessor: emailhtml
          root: incident
      maxNumberOfURL:
        complex:
          root: inputs.DBotPredictURLPhishingURLsNumber
      urls:
        complex:
          root: ExtractedURLsFromFiles
    separatecontext: false
    skipunavailable: true
    task:
      brand: ""
      description: Predicts phishing URLs using a pre-trained model.
      id: 8e768c46-611a-4178-8768-50cba9c5e4cc
      iscommand: false
      name: Predict Phishing URLs
      script: DBotPredictURLPhishing
      type: regular
      version: -1
    taskid: 8e768c46-611a-4178-8768-50cba9c5e4cc
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -1230,
          "y": 1005
        }
      }
  "142":
    continueonerrortype: ""
    id: "142"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "87"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 31191222-cab2-4a7f-8d17-ea36e1ff3e63
      iscommand: false
      name: Predict Phishing Type
      type: title
      version: -1
    taskid: 31191222-cab2-4a7f-8d17-ea36e1ff3e63
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": -1832.5,
          "y": 795
        }
      }
  "143":
    continueonerrortype: ""
    id: "143"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "140"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 75bfc22a-3f9b-470d-8428-6f3a6e75404b
      iscommand: false
      name: Predict Phishing URLs
      type: title
      version: -1
    taskid: 75bfc22a-3f9b-470d-8428-6f3a6e75404b
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": -1230,
          "y": 795
        }
      }
  "144":
    continueonerrortype: ""
    id: "144"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "145"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 0170cf97-120f-4f84-8bc6-f9f503b7ff6d
      iscommand: false
      name: Incident Created Manually
      type: title
      version: -1
    taskid: 0170cf97-120f-4f84-8bc6-f9f503b7ff6d
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": 172.5,
          "y": -225
        }
      }
  "145":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              complex:
                accessor: reporteremailaddress
                root: incident
          operator: isNotEmpty
      label: "yes"
    continueonerrortype: ""
    id: "145"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "11"
      "yes":
      - "146"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Checks whether the email address of the phishing email reporter
        was specified on incident creation, so that an acknowledgement email can be
        sent to them.
      id: eb43d263-9ede-4c65-8a30-a6e16820e5fa
      iscommand: false
      name: Was the reporter of the phishing email specified?
      type: condition
      version: -1
    taskid: eb43d263-9ede-4c65-8a30-a6e16820e5fa
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 172.5,
          "y": -85
        }
      }
  "146":
    continueonerrortype: ""
    id: "146"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "18"
      - "11"
    note: false
    quietmode: 0
    reputationcalc: 1
    scriptarguments:
      key:
        simple: ReporterAddress
      value:
        complex:
          accessor: reporteremailaddress
          root: incident
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Stores the email address of the user that reported the incident.
      id: 20fe15ef-3a66-4fb1-8e2f-5475a1438239
      iscommand: false
      name: Store the email address of the reporting user
      script: Set
      type: regular
      version: -1
    taskid: 20fe15ef-3a66-4fb1-8e2f-5475a1438239
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 400,
          "y": 100
        }
      }
  "147":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              complex:
                accessor: sourceBrand
                root: incident
          operator: isEqualString
          right:
            value:
              simple: Manual
      label: Manually
    continueonerrortype: ""
    id: "147"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "134"
      Manually:
      - "144"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Checks whether the incident came from a mail listener integration,
        or was created manually by the user.
      id: d3602e32-d12d-45b9-885b-0afaf411a2d4
      iscommand: false
      name: How was the incident created?
      type: condition
      version: -1
    taskid: d3602e32-d12d-45b9-885b-0afaf411a2d4
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": -497.5,
          "y": -410
        }
      }
  "148":
    continueonerrortype: ""
    id: "148"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "27"
    note: false
    quietmode: 0
    scriptarguments:
      body:
        simple: |-
          Hi ${.=function(val) { if(!(val.Account.length > 1)) return val.ReporterAddress; var reporter = val.ReporterAddress; var account = val.Account && val.Account.filter(function(acc) { return acc.DisplayName && (acc.Email  === reporter || Array.isArray(acc.Email) && acc.Email.indexOf(reporter) > -1) }); return account && account[0] && account[0].DisplayName[0] || reporter || ''; }(val)},
          We've concluded that the email you forwarded to us is malicious. No further action is required on your part. Good job on detecting and forwarding it to us!

          All the best,
            Your security team
      subject:
        simple: 'Re: Phishing Investigation - ${incident.name}'
      to:
        simple: ${ReporterAddress}
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Sends an email to the user explaining that the email they reported
        is malicious.
      id: 738f6593-7302-41a7-8740-f6dce8c4dd9e
      iscommand: true
      name: Update the user that the reported email is malicious
      script: '|||send-mail'
      type: regular
      version: -1
    taskid: 738f6593-7302-41a7-8740-f6dce8c4dd9e
    timertriggers:
    - action: stop
      fieldname: detectionsla
    type: regular
    view: |-
      {
        "position": {
          "x": 110,
          "y": 3620
        }
      }
  "149":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              complex:
                root: PartOfCampaign
          operator: isNotEmpty
      - - left:
            iscontext: true
            value:
              simple: ReporterAddress
          operator: isNotEmpty
      label: yes - phishing campaign
    - condition:
      - - left:
            iscontext: true
            value:
              simple: ReporterAddress
          operator: isNotEmpty
      label: yes - phishing
    continueonerrortype: ""
    id: "149"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "27"
      yes - phishing:
      - "148"
      yes - phishing campaign:
      - "150"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Checks whether the user can be informed about the verdict of the
        incident.
      id: 849aa599-081e-4b5c-80b3-e6098463f7be
      iscommand: false
      name: Can the user be informed about the verdict?
      type: condition
      version: -1
    taskid: 849aa599-081e-4b5c-80b3-e6098463f7be
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 352.5,
          "y": 3410
        }
      }
  "150":
    continueonerrortype: ""
    id: "150"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "27"
    note: false
    quietmode: 0
    scriptarguments:
      body:
        simple: |-
          Hi ${.=function(val) { if(!(val.Account.length > 1)) return val.ReporterAddress; var reporter = val.ReporterAddress; var account = val.Account && val.Account.filter(function(acc) { return acc.DisplayName && (acc.Email  === reporter || Array.isArray(acc.Email) && acc.Email.indexOf(reporter) > -1) }); return account && account[0] && account[0].DisplayName[0] || reporter || ''; }(val)},
          We've concluded that the email you forwarded to us is part of a bigger phishing campaign that targeted our company. No further action is required on your part. Good job on detecting and forwarding it to us!

          All the best,
            Your security team
      subject:
        simple: 'Re: Phishing Investigation - ${incident.name}'
      to:
        simple: ${ReporterAddress}
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Sends an email to the user explaining that the email they reported
        is malicious.
      id: b9f96cd5-1144-4436-8293-2053e587d698
      iscommand: true
      name: Update the user that the email is a malicious campaign
      script: '|||send-mail'
      type: regular
      version: -1
    taskid: b9f96cd5-1144-4436-8293-2053e587d698
    timertriggers:
    - action: stop
      fieldname: detectionsla
    type: regular
    view: |-
      {
        "position": {
          "x": 580,
          "y": 3620
        }
      }
  "151":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              simple: ReporterAddress
          operator: isNotEmpty
      label: "Yes"
    continueonerrortype: ""
    id: "151"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "8"
      "Yes":
      - "16"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Checks whether the user can be informed about the verdict of the
        incident.
      id: 029871a7-8d95-409c-80d7-6ccef105a1ba
      iscommand: false
      name: Can the user be informed about the verdict?
      type: condition
      version: -1
    taskid: 029871a7-8d95-409c-80d7-6ccef105a1ba
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": -897.5,
          "y": 3410
        }
      }
  "152":
    continueonerrortype: ""
    id: "152"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "138"
    note: false
    quietmode: 0
    reputationcalc: 1
    scriptarguments:
      all:
        simple: "no"
      key:
        simple: ExtractedIndicators
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Clears the previously extracted reporter email address from the
        context, so that the phishing sender can be extracted and stored in the same
        key.
      id: 2df11a6c-171a-4837-8bdf-c2bb88d2174f
      iscommand: false
      name: Clear previously extracted emails
      script: DeleteContext
      type: regular
      version: -1
    taskid: 2df11a6c-171a-4837-8bdf-c2bb88d2174f
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 352.5,
          "y": 4370
        }
      }
version: -1
view: |-
  {
    "linkLabelsPosition": {
      "137_135_yes": 0.54,
      "145_11_#default#": 0.15,
      "147_144_Manually": 0.52,
      "149_148_yes - phishing": 0.66,
      "149_27_#default#": 0.21,
      "151_8_#default#": 0.11,
      "15_31_#default#": 0.6,
      "33_149_yes": 0.18,
      "36_43_#default#": 0.27,
      "37_43_#default#": 0.12,
      "37_91_yes": 0.57,
      "79_84_#default#": 0.3,
      "90_84_#default#": 0.39,
      "90_89_yes": 0.48
    },
    "paper": {
      "dimensions": {
        "height": 6300,
        "width": 3212.5,
        "x": -1832.5,
        "y": -690
      }
    }
  }
