{
	"author": "Cortex XSOAR",
	"authorImage": "content/packs/Base/Author_image.png",
	"beta": false,
	"cacheVersn": 0,
	"categories": [
		"Endpoint",
		"Data Enrichment \u0026 Threat Intelligence"
	],
	"certification": "certified",
	"contentItemTypes": [
		"integration",
		"automation",
		"incidentfield",
		"incidenttype",
		"indicatorfield",
		"dashboard",
		"playbook",
		"classifier",
		"layoutscontainer",
		"widget"
	],
	"contentItems": {
		"automation": [
			{
				"description": "This widget displays Cortex XDR identity information.",
				"name": "CortexXDRIdentityInformationWidget",
				"tags": [
					"dynamic-section"
				]
			},
			{
				"description": "The widget returns the number of the disconnected endpoints using xdr-get-endpoints command.",
				"name": "XDRDisconnectedEndpoints",
				"tags": [
					"widget"
				]
			},
			{
				"description": "Entry widget that returns a pie chart of alerts for a specified Cortex XDR incident by alert severity (low, medium, and high).",
				"name": "EntryWidgetPieAlertsXDR",
				"tags": [
					"dynamic-section"
				]
			},
			{
				"description": "Train clustering model on Cortex XDR incident type.",
				"name": "DBotGroupXDRIncidents",
				"tags": [
					"widget"
				]
			},
			{
				"description": "This widget displays Cortex XDR remediation action information.",
				"name": "CortexXDRRemediationActionsWidget",
				"tags": [
					"dynamic-section"
				]
			},
			{
				"description": "The widget returns the number of the connected endpoints using xdr-get-endpoints command.",
				"name": "XDRConnectedEndpoints",
				"tags": [
					"widget"
				]
			},
			{
				"description": "Entry widget that returns the number of hosts in a Cortex XDR incident.",
				"name": "EntryWidgetNumberHostsXDR",
				"tags": [
					"dynamic-section"
				]
			},
			{
				"description": "This script retrieves additional original alert information from the context.",
				"name": "CortexXDRAdditionalAlertInformationWidget",
				"tags": [
					"dynamic-section"
				]
			},
			{
				"description": "This script returns an HTML result of the cloud providers in the incident. The result will be displayed in the following font colors: AWS - red, GCP - green, Azure - blue.",
				"name": "CortexXDRCloudProviderWidget",
				"tags": [
					"dynamic-section"
				]
			},
			{
				"description": "Deprecated. No available replacement. Syncs a single incident between Demisto and XDR. This script always uses the xdr-get-incident-extra-data command and outputs to the context the entire incident JSON. When the incident is updated in XDR, the Demisto incident will be updated accordingly and the default playbook will rerun. When an incident is updated in Demisto, the script will execute the xdr-update-incident command and update the incident in XDR.",
				"name": "XDRSyncScript",
				"tags": [
					"xdr"
				]
			},
			{
				"description": "Entry widget that returns the number of users that participated in a specified Cortex XDR incident.",
				"name": "EntryWidgetNumberUsersXDR",
				"tags": [
					"dynamic-section"
				]
			}
		],
		"classifier": [
			{
				"description": "Classifies Cortex XDR incidents.",
				"name": "Cortex XDR - Classifier"
			},
			{
				"description": "Maps outgoing Cortex XDR incidents fields.",
				"name": "Cortex XDR - Outgoing Mapper"
			},
			{
				"description": "Maps incoming Cortex XDR incidents fields.",
				"name": "XDR - Incoming Mapper"
			},
			{
				"description": "Classifies Cortex XDR incidents.",
				"name": "Cortex XDR Incident Handler - Classifier"
			}
		],
		"correlationrule": null,
		"dashboard": [
			{
				"name": "Cortex XDR"
			},
			{
				"name": "Cortex XDR Events Grouping"
			}
		],
		"genericfield": null,
		"generictype": null,
		"incidentfield": [
			{
				"description": "",
				"name": "XDR File Name",
				"type": "multiSelect"
			},
			{
				"description": "",
				"name": "XDR MITRE Techniques",
				"type": "multiSelect"
			},
			{
				"description": "",
				"name": "XDR High Severity Alert Count",
				"type": "number"
			},
			{
				"description": "",
				"name": "XDR device control violations",
				"type": "grid"
			},
			{
				"description": "",
				"name": "XDR User Count",
				"type": "number"
			},
			{
				"description": "",
				"name": "XDR Host Count",
				"type": "number"
			},
			{
				"description": "",
				"name": "XDR Notes",
				"type": "shortText"
			},
			{
				"description": "",
				"name": "XDR Medium Severity Alert Count",
				"type": "number"
			},
			{
				"description": "The time the incident was modified in XDR",
				"name": "XDR Modification Time",
				"type": "date"
			},
			{
				"description": "",
				"name": "XDR Assigned User Pretty Name",
				"type": "shortText"
			},
			{
				"description": "",
				"name": "XDR Alert Count",
				"type": "number"
			},
			{
				"description": "",
				"name": "XDR Detection Time",
				"type": "date"
			},
			{
				"description": "",
				"name": "XDR File SHA256",
				"type": "multiSelect"
			},
			{
				"description": "",
				"name": "XDR URL",
				"type": "url"
			},
			{
				"description": "",
				"name": "XDR Similar Incidents",
				"type": "grid"
			},
			{
				"description": "",
				"name": "XDR Starred",
				"type": "boolean"
			},
			{
				"description": "",
				"name": "XDR Description",
				"type": "shortText"
			},
			{
				"description": "",
				"name": "XDR Resolve Comment",
				"type": "shortText"
			},
			{
				"description": "",
				"name": "XDR MITRE Tactics",
				"type": "multiSelect"
			},
			{
				"description": "",
				"name": "XDR Status v2",
				"type": "singleSelect"
			},
			{
				"description": "",
				"name": "XDR File Artifacts",
				"type": "grid"
			},
			{
				"description": "",
				"name": "XDR Incident ID",
				"type": "shortText"
			},
			{
				"description": "The last time the incident was mirrored in.",
				"name": "LastMirroredInTime",
				"type": "date"
			},
			{
				"description": "",
				"name": "XDR Disconnected endpoints",
				"type": "grid"
			},
			{
				"description": "",
				"name": "XDR Alerts",
				"type": "grid"
			},
			{
				"description": "",
				"name": "XDR Network Artifacts",
				"type": "grid"
			},
			{
				"description": "Deprecated from version 6.0.0. Please use XDR Status v2 instead",
				"name": "XDR Status",
				"type": "shortText"
			},
			{
				"description": "",
				"name": "XDR Users",
				"type": "multiSelect"
			},
			{
				"description": "",
				"name": "XDR Assigned User Email",
				"type": "shortText"
			},
			{
				"description": "",
				"name": "XDR manual severity",
				"type": "shortText"
			},
			{
				"description": "",
				"name": "XDR Alert Category",
				"type": "multiSelect"
			},
			{
				"description": "",
				"name": "XDR Alert Name",
				"type": "multiSelect"
			},
			{
				"description": "",
				"name": "XDR Low Severity Alert Count",
				"type": "number"
			}
		],
		"incidenttype": [
			{
				"closureScript": "",
				"days": 0,
				"hours": 0,
				"name": "Cortex XDR Port Scan",
				"playbook": "Cortex XDR - Port Scan",
				"weeks": 0
			},
			{
				"closureScript": "",
				"days": 0,
				"hours": 0,
				"name": "Cortex XDR Device Control Violations",
				"playbook": "Cortex XDR device control violations",
				"weeks": 0
			},
			{
				"closureScript": "",
				"days": 0,
				"hours": 0,
				"name": "Cortex XDR Incident",
				"playbook": "Cortex XDR incident handling v3",
				"weeks": 0
			},
			{
				"closureScript": "",
				"days": 0,
				"hours": 0,
				"name": "Cortex XDR Disconnected endpoints",
				"playbook": "Cortex XDR disconnected endpoints",
				"weeks": 0
			},
			{
				"closureScript": "",
				"days": 0,
				"hours": 0,
				"name": "Cortex XDR - XCLOUD",
				"playbook": "",
				"weeks": 0
			}
		],
		"indicatorfield": [
			{
				"description": "The indicator status in XDR.",
				"name": "XDR status",
				"type": "singleSelect"
			}
		],
		"integration": [
			{
				"category": "Data Enrichment \u0026 Threat Intelligence",
				"commands": [
					{
						"description": "Sync your IOC with Cortex XDR and delete the old.",
						"name": "xdr-iocs-sync"
					},
					{
						"description": "Push modified IOCs to Cortex XDR.",
						"name": "xdr-iocs-push"
					},
					{
						"description": "Set sync time manually (Do not use this command unless you unredstandard the consequences).",
						"name": "xdr-iocs-set-sync-time"
					},
					{
						"description": "Creates the sync file for the manual process. Run this command when instructed by the XDR support team.",
						"name": "xdr-iocs-create-sync-file"
					},
					{
						"description": "Enables IOCs in the XDR server.",
						"name": "xdr-iocs-enable"
					},
					{
						"description": "Disables IOCs in the XDR server.",
						"name": "xdr-iocs-disable"
					}
				],
				"description": "Use the Cortex XDR - IOCs feed integration to sync indicators from Cortex XSOAR to Cortex XDR and back to Cortex XSOAR. Cortex XDR is the world's first detection and response app that natively integrates network, endpoint and cloud data to stop sophisticated attacks.",
				"name": "Cortex XDR - IOC"
			},
			{
				"category": "Endpoint",
				"commands": [
					{
						"description": "Returns a list of incidents, which you can filter by a list of incident IDs (max. 100), the time the incident was last modified, and the time the incident was created.\nIf you pass multiple filtering arguments, they will be concatenated using the AND condition. The OR condition is not supported.",
						"name": "xdr-get-incidents"
					},
					{
						"description": "Returns additional data for the specified incident, for example, related alerts, file artifacts, network artifacts, and so on.",
						"name": "xdr-get-incident-extra-data"
					},
					{
						"description": "Updates one or more fields of a specified incident. Missing fields will be ignored. To remove the assignment for an incident, pass a null value in the assignee email argument.",
						"name": "xdr-update-incident"
					},
					{
						"description": "Uploads an alert from external alert sources in Cortex XDR format. Cortex XDR displays alerts that are parsed\nsuccessfully in related incidents and views. You can send 600 alerts per minute. Each request can contain a\nmaximum of 60 alerts.",
						"name": "xdr-insert-parsed-alert"
					},
					{
						"description": "Upload alerts in CEF format from external alert sources. After you map CEF alert fields to Cortex XDR fields, Cortex XDR displays the alerts in related incidents and views. You can send 600 requests per minute. Each request can contain a maximum of 60 alerts.",
						"name": "xdr-insert-cef-alerts"
					},
					{
						"description": "Isolates the specified endpoint.",
						"name": "xdr-endpoint-isolate"
					},
					{
						"description": "Isolates the specified endpoint. This command will be deprecated soon, use `xdr-endpoint-isolate` instead.",
						"name": "xdr-isolate-endpoint"
					},
					{
						"description": "Reverses the isolation of an endpoint.",
						"name": "xdr-endpoint-unisolate"
					},
					{
						"description": "Reverses the isolation of an endpoint. This command will be deprecated soon, use `xdr-endpoint-unisolate` instead.",
						"name": "xdr-unisolate-endpoint"
					},
					{
						"description": "Gets a list of endpoints, according to the passed filters. If there are no filters, all endpoints are returned. Filtering by multiple fields will be concatenated using AND condition (OR is not supported). Maximum result set size is 100. Offset is the zero-based number of endpoint from the start of the result set (start by counting from 0).",
						"name": "xdr-get-endpoints"
					},
					{
						"description": "Gets a list of all the agent versions to use for creating a distribution list.",
						"name": "xdr-get-distribution-versions"
					},
					{
						"description": "Creates an installation package. This is an asynchronous call that returns the distribution ID. This does not mean that the creation succeeded. To confirm that the package has been created, check the status of the distribution by running the Get Distribution Status API.",
						"name": "xdr-create-distribution"
					},
					{
						"description": "Gets the distribution URL for downloading the installation package.",
						"name": "xdr-get-distribution-url"
					},
					{
						"description": "Gets the status of the installation package.",
						"name": "xdr-get-create-distribution-status"
					},
					{
						"description": "Gets management logs. You can filter by multiple fields, which will be concatenated using the AND condition (OR is not supported). Maximum result set size is 100. Offset is the zero-based number of management logs from the start of the result set (start by counting from 0).",
						"name": "xdr-get-audit-management-logs"
					},
					{
						"description": "Gets agent event reports. You can filter by multiple fields, which will be concatenated using the AND condition (OR is not supported). Maximum result set size is 100. Offset is the zero-based number of reports from the start of the result set (start by counting from 0).",
						"name": "xdr-get-audit-agent-reports"
					},
					{
						"description": "Block lists requested files which have not already been block listed or added to allow lists.",
						"name": "xdr-blocklist-files"
					},
					{
						"description": "Deprecated, use `xdr-blocklist-files` instead.",
						"name": "xdr-blacklist-files"
					},
					{
						"description": "Adds requested files to allow list if they are not already on block list or allow list.",
						"name": "xdr-allowlist-files"
					},
					{
						"description": "Deprecated, use `xdr-allowlist-files` instead.",
						"name": "xdr-whitelist-files"
					},
					{
						"description": "Quarantines a file on selected endpoints. You can select up to 1000 endpoints.",
						"name": "xdr-file-quarantine"
					},
					{
						"description": "Quarantines a file on selected endpoints. This command will be deprecated soon, use `xdr-file-quarantine` instead.",
						"name": "xdr-quarantine-files"
					},
					{
						"description": "Retrieves the quarantine status for a selected file.",
						"name": "xdr-get-quarantine-status"
					},
					{
						"description": "Restores a quarantined file on requested endpoints.",
						"name": "xdr-file-restore"
					},
					{
						"description": "Restores a quarantined file on requested endpoints. This command will be deprecated soon, use `xdr-file-restore` instead.",
						"name": "xdr-restore-file"
					},
					{
						"description": "Runs a scan on a selected endpoint. To scan all endpoints, run this command with argument all=true. Note: scanning all the endpoints may cause performance issues and latency.",
						"name": "xdr-endpoint-scan-execute"
					},
					{
						"description": "Runs a scan on a selected endpoint. This command will be deprecated soon, use `xdr-endpoint-scan-execute` instead.",
						"name": "xdr-endpoint-scan"
					},
					{
						"description": "Cancels the scan of selected endpoints. A scan can only be aborted if the selected endpoints are Pending or In Progress. To scan all endpoints, run the command with the argument all=true. Note that scanning all of the endpoints may cause performance issues and latency.",
						"name": "xdr-endpoint-scan-abort"
					},
					{
						"description": "Gets mapping fields from remote incident. Note: This method will not update the current incident, it's here for debugging purposes.",
						"name": "get-mapping-fields"
					},
					{
						"description": "Gets remote data from a remote incident. Note: This method will not update the current incident, it's here for debugging purposes.",
						"name": "get-remote-data"
					},
					{
						"description": "Gets the list of incidents that were modified since the last update. Note: This method is here for debugging purposes. get-modified-remote-data is used as part of a Mirroring feature, which is available since version 6.1.",
						"name": "get-modified-remote-data"
					},
					{
						"description": "Gets the policy name for a specific endpoint.",
						"name": "xdr-get-policy"
					},
					{
						"description": "Gets a list of scripts available in the scripts library.",
						"name": "xdr-get-scripts"
					},
					{
						"description": "Deletes selected endpoints in the Cortex XDR app. You can delete up to 1000 endpoints.",
						"name": "xdr-delete-endpoints"
					},
					{
						"description": "Gets a list of device control violations filtered by selected fields. You can retrieve up to 100 violations.",
						"name": "xdr-get-endpoint-device-control-violations"
					},
					{
						"description": "Retrieves files from selected endpoints. You can retrieve up to 20 files, from no more than 10 endpoints. At least one endpoint ID and one file path are necessary in order to run the command. After running this command, you can use the xdr-action-status-get command with returned action_id, to check the action status.",
						"name": "xdr-file-retrieve"
					},
					{
						"description": "Retrieves files from selected endpoints. This command will be deprecated soon, use `xdr-file-retrieve` instead.",
						"name": "xdr-retrieve-files"
					},
					{
						"description": "View the file retrieved by the xdr-retrieve-files command according to the action ID. Before running this command, you can use the xdr-action-status-get command to check if this action completed successfully.",
						"name": "xdr-retrieve-file-details"
					},
					{
						"description": "Gets the full definition of a specific script in the scripts library.",
						"name": "xdr-get-script-metadata"
					},
					{
						"description": "Gets the code of a specific script in the script library.",
						"name": "xdr-get-script-code"
					},
					{
						"description": "Retrieves the status of the requested actions according to the action ID.",
						"name": "xdr-action-status-get"
					},
					{
						"description": "Initiates a new endpoint script execution action using a script from the script library.",
						"name": "xdr-run-script"
					},
					{
						"description": "Initiates a new endpoint script execution action using the provided snippet code.",
						"name": "xdr-snippet-code-script-execute"
					},
					{
						"description": "Initiates a new endpoint script execution action using the provided snippet code. This command will be deprecated soon, use `xdr-snippet-code-script-execute` instead.",
						"name": "xdr-run-snippet-code-script"
					},
					{
						"description": "Retrieves the status of a script execution action.",
						"name": "xdr-get-script-execution-status"
					},
					{
						"description": "Retrieve the results of a script execution action.",
						"name": "xdr-get-script-execution-results"
					},
					{
						"description": "Gets the files retrieved from a specific endpoint during a script execution.",
						"name": "xdr-get-script-execution-result-files"
					},
					{
						"description": "Initiates a new endpoint script execution of shell commands.",
						"name": "xdr-script-commands-execute"
					},
					{
						"description": "Initiates a new endpoint script execution of shell commands. This command will be deprecated soon, use `xdr-script-commands-execute` instead.",
						"name": "xdr-run-script-execute-commands"
					},
					{
						"description": "Initiates a new endpoint script execution to delete the specified file.",
						"name": "xdr-file-delete-script-execute"
					},
					{
						"description": "Initiates a new endpoint script execution to delete the specified file. This command will be deprecated soon, use `xdr-file-delete-script-execute` instead.",
						"name": "xdr-run-script-delete-file"
					},
					{
						"description": "Initiates a new endpoint script execution to check if file exists.",
						"name": "xdr-file-exist-script-execute"
					},
					{
						"description": "Initiates a new endpoint script execution to check if file exists. This command will be deprecated soon, use `xdr-file-exist-script-execute` instead.",
						"name": "xdr-run-script-file-exists"
					},
					{
						"description": "Initiates a new endpoint script execution kill process.",
						"name": "xdr-kill-process-script-execute"
					},
					{
						"description": "Initiates a new endpoint script execution kill process. This command will be deprecated soon, use `xdr-kill-process-script-execute` instead.",
						"name": "xdr-run-script-kill-process"
					},
					{
						"description": "Returns information about an endpoint.",
						"name": "endpoint"
					},
					{
						"description": "Returns the number of the connected\\disconnected endpoints.",
						"name": "xdr-get-endpoints-by-status"
					},
					{
						"description": "Returns information about each alert ID.",
						"name": "xdr-get-cloud-original-alerts"
					},
					{
						"description": "Returns a list of alerts and their metadata, which you can filter by built-in arguments or use the custom_filter to input a JSON filter object. \nMultiple filter arguments will be concatenated using the AND operator, while arguments that support a comma-separated list of values will use an OR operator between each value.",
						"name": "xdr-get-alerts"
					},
					{
						"description": "Removes requested files from allow list.",
						"name": "xdr-remove-allowlist-files"
					},
					{
						"description": "Removes requested files from block list.",
						"name": "xdr-remove-blocklist-files"
					},
					{
						"description": "Retrieves contributing events for a specific alert.",
						"name": "xdr-get-contributing-event"
					},
					{
						"description": "Replace the featured hosts\\users\\IP addresses\\active directory groups listed in your environment.",
						"name": "xdr-replace-featured-field"
					}
				],
				"description": "Cortex XDR is the world's first detection and response app that natively integrates network, endpoint, and cloud data to stop sophisticated attacks.",
				"name": "Palo Alto Networks Cortex XDR - Investigation and Response"
			},
			{
				"category": "Endpoint",
				"commands": [
					{
						"description": "Execute an XQL query and retrieve results of an executed XQL query API. The command will be executed every 10 seconds until results are retrieved or until a timeout error is raised.\nWhen more than 1000 results are retrieved, the command will return a compressed gzipped JSON format file,\nunless the argument 'parse_result_file_to_context' is set to true and then the results will be extracted to the context.",
						"name": "xdr-xql-generic-query"
					},
					{
						"description": "Retrieve the amount of query quota available and used.",
						"name": "xdr-xql-get-quota"
					},
					{
						"description": "Retrieve results of an executed XQL query API. The command will be executed every 10 seconds until results are retrieved or until a timeout error is raised.\nWhen more than 1000 results are retrieved, the command will return a compressed gzipped JSON format file,\nunless the argument 'parse_result_file_to_context' is set to true and then the results will be extracted to the context.",
						"name": "xdr-xql-get-query-results"
					},
					{
						"description": "Query file events by the SHA256 file.",
						"name": "xdr-xql-file-event-query"
					},
					{
						"description": "Query process events by the SHA256 process.",
						"name": "xdr-xql-process-event-query"
					},
					{
						"description": "Query DLL module events by the SHA256 DLL.",
						"name": "xdr-xql-dll-module-query"
					},
					{
						"description": "Query network connections between a source IP, destination IP and port.",
						"name": "xdr-xql-network-connection-query"
					},
					{
						"description": "Query windows registry by registry key name.",
						"name": "xdr-xql-registry-query"
					},
					{
						"description": "Query event logs by event ID.",
						"name": "xdr-xql-event-log-query"
					},
					{
						"description": "Query by DNS query or domain name.",
						"name": "xdr-xql-dns-query"
					},
					{
						"description": "Search for the process that wrote the given file, by its SHA256 or file path.",
						"name": "xdr-xql-file-dropper-query"
					},
					{
						"description": "Search for network connection created by a given process instance ID.",
						"name": "xdr-xql-process-instance-network-activity-query"
					},
					{
						"description": "Search for network connection created by a given process causality ID.",
						"name": "xdr-xql-process-causality-network-activity-query"
					}
				],
				"description": "Cortex XDR - XQL Query Engine enables you to run XQL queries on your data sources.",
				"name": "Cortex XDR - XQL Query Engine"
			}
		],
		"layoutscontainer": [
			{
				"description": "",
				"name": "Cortex XDR Disconnected endpoints"
			},
			{
				"description": "",
				"name": "Cortex XDR Device Control Violations"
			},
			{
				"description": "",
				"name": "Cortex XDR - XCLOUD"
			},
			{
				"description": "",
				"name": "Cortex XDR Port Scan"
			},
			{
				"description": "",
				"name": "Cortex XDR Incident"
			}
		],
		"list": null,
		"modelingrule": null,
		"parsingrule": null,
		"playbook": [
			{
				"description": "This playbook is part of the 'Malware Investigation And Response' pack. For more information, refer to https://xsoar.pan.dev/docs/reference/packs/malware-investigation-and-response.\nThis playbook assists in retrieving file paths from the Cortex XDR incident by hash.",
				"name": "Cortex XDR - Get File Path from alerts by hash"
			},
			{
				"description": "Investigate and respond to Cortex XDR Cloud alerts where an AWS IAM user`s access key is used suspiciously to access the cloud environment. \nThe following alerts are supported for AWS environments.\n- Penetration testing tool attempt\n- Penetration testing tool activity\n- Suspicious API call from a Tor exit node\n This is a beta playbook, which lets you implement and test pre-release software. At the moment we support AWS but are working towards multi-cloud support. Since the playbook is beta, it might contain bugs. Updates to the playbook during the beta phase might include non-backward compatible features. We appreciate your feedback on the quality and usability of the content to help us identify issues, fix them, and continually improve.\n",
				"name": "Cortex XDR - AWS IAM user access investigation"
			},
			{
				"description": "Queries Cortex XDR for device control violations for the specified hosts, IP address, or XDR endpoint ID. It then communicates via email with the involved users to understand the nature of the incident and if the user connected the device. \nAll the collected data will be displayed in the XDR device control incident layout.\nThis playbook can also be associated with Cortex XDR device control violation job to periodically query and investigate XDR device control violations. In this configuration, the playbook will only communicate with the involved users.",
				"name": "Cortex XDR device control violations"
			},
			{
				"description": "Initiates a new endpoint script execution to delete the specified file and retrieve the results.",
				"name": "Cortex XDR - delete file"
			},
			{
				"description": "Retrieves files from selected endpoints. You can retrieve up to 20 files, from no more than 10 endpoints.\nInputs for this playbook are:\n- A comma-separated list of endpoint IDs.\n- A comma-separated list of file paths for your operating system, either Windows, Linux, or Mac. At least one file path is required.",
				"name": "Cortex XDR - Retrieve File Playbook"
			},
			{
				"description": "Investigates a Cortex XDR incident containing internal port scan alerts. The playbook:\n- Syncs data with Cortex XDR.\n- Notifies management about a compromised host.\n- Escalates the incident in case of lateral movement alert detection.\n\nThe playbook is designed to run as a sub-playbook in 'Cortex XDR Incident Handling - v3 \u0026 Cortex XDR Alerts Handling'. \nIt depends on the data from the parent playbooks and can not be used as a standalone version.",
				"name": "Cortex XDR - Port Scan - Adjusted"
			},
			{
				"description": "A Job to periodically query disconnected Cortex XDR endpoints with a provided last seen time range playbook input.\nThe Collected data, if found will be generated to a CSV report, including a detailed list of the disconnected endpoints.\nThe report will be sent to the recipient's provided email addresses in the playbook input.\nThe playbook includes an incident type with a dedicated layout to visualize the collected data.\nTo set the job correctly, you will need to.\n1. Create a new recurring job.\n2. Set the recurring schedule.\n3. Add a name.\n4. Set type to Cortex XDR disconnected endpoints.\n5. Set this playbook as the job playbook.\n\nhttps://xsoar.pan.dev/docs/incidents/incident-jobs\n\nThe scheduled run time and the timestamp relative date should be identical,\nIf the job is recurring every 7 days, the time range should be 7 days as well.\n",
				"name": "Cortex XDR disconnected endpoints"
			},
			{
				"description": "This playbook is part of the 'Malware Investigation And Response' pack. For more information, refer to https://xsoar.pan.dev/docs/reference/packs/malware-investigation-and-response. This playbook handles all the endpoint investigation actions available with Cortex XSOAR, including the following tasks:\n * Pre-defined MITRE Tactics\n * Host fields (Host ID)\n * Attacker fields (Attacker IP, External host)\n * MITRE techniques\n * File hash (currently, the playbook supports only SHA256)  \n\n Note: The playbook inputs enable manipulating the execution flow; read the input descriptions for details.",
				"name": "Cortex XDR - Endpoint Investigation"
			},
			{
				"description": "Compares incidents in Palo Alto Networks Cortex XDR and Cortex XSOAR, and updates the incidents appropriately. When an incident is updated in Cortex XSOAR, the XDRSyncScript will update the incident in XDR. When an incident is updated in XDR, the XDRSyncScript will update the incident fields in Cortex XSOAR and rerun the current playbook. Do not use this playbook when enabling the incident mirroring feature added in XSOAR version 6.0.0.",
				"name": "Cortex XDR Incident Sync"
			},
			{
				"description": "Initiates a new endpoint script execution to check if the file exists and retrieve the results.\n",
				"name": "Cortex XDR - check file existence"
			},
			{
				"description": "This playbook unisolates endpoints according to the endpoint ID that is provided in the playbook input.",
				"name": "Cortex XDR - Unisolate Endpoint"
			},
			{
				"description": "This playbook is used to loop over every alert in a Cortex XDR incident. \nSupported alert categories:\n- Malware\n- Port Scan",
				"name": "Cortex XDR Alerts Handling"
			},
			{
				"description": "Initiates a new endpoint script execution action using a provided script unique id from Cortex XDR script library.",
				"name": "Cortex XDR - Run script"
			},
			{
				"description": "This playbook is part of the 'Malware Investigation And Response' pack. For more information, refer to https://xsoar.pan.dev/docs/reference/packs/malware-investigation-and-response.\nThis playbook investigates Cortex XDR malware incidents. It uses:\\n\\n - Cortex XDR insights \\n - Command Line Analysis \\n - Dedup \\n - Sandbox hash search and detonation \\n - Cortex XDR enrichment \\n - Incident Handling (True/False Positive)",
				"name": "Cortex XDR Malware - Investigation And Response"
			},
			{
				"description": "This playbook is part of the 'Malware Investigation And Response' pack. For more information, refer to https://xsoar.pan.dev/docs/reference/packs/malware-investigation-and-response.\nThis playbook is a sub-playbook for the Cortex XDR malware investigation flow. In this playbook, we retrieve multiple files from the investigated device (using the Device ID incident field), based on their SHA256 hash.",
				"name": "Cortex XDR - Retrieve File by sha256"
			},
			{
				"description": "This playbook is part of the 'Malware Investigation And Response' pack. For more information, refer to https://xsoar.pan.dev/docs/reference/packs/malware-investigation-and-response.\nThis playbook handles false-positive incident closures for Cortex XDR - Malware investigation.",
				"name": "Cortex XDR - False Positive Incident Handling"
			},
			{
				"description": "This playbook is triggered by fetching a Palo Alto Networks Cortex XDR incident. \nThe playbook syncs and updates new XDR alerts that construct the incident. It enriches indicators using Threat Intelligence integrations and Palo Alto Networks AutoFocus. The incident's severity is then updated based on the indicators reputation and an analyst is assigned for manual investigation. If chosen, automated remediation with Palo Alto Networks FireWall is initiated. After a manual review by the SOC analyst, the XDR incident is closed automatically.\n\n*** Note - The XDRSyncScript used by this playbook sets data in the XDR incident fields that were released to content from the Demisto server version 5.0.0.\nFor Demisto versions under 5.0.0, please follow the 'Palo Alto Networks Cortex XDR' documentation to upload the new fields manually.",
				"name": "Cortex XDR Incident Handling"
			},
			{
				"description": "Initiates a new endpoint script execution action using the provided snippet code and retrieves the file results.",
				"name": "Cortex XDR - Execute snippet code script"
			},
			{
				"description": "Investigates a Cortex XDR incident containing internal malware alerts. The playbook:\n- Enriches the infected endpoint details.\n- Lets the analyst manually retrieve the malicious file.\n- Performs file detonation.\n\nThe playbook is used as a sub- playbook in ‘Cortex XDR Incident Handling - v2’\n",
				"name": "Cortex XDR - Malware Investigation"
			},
			{
				"description": "",
				"name": "Cortex XDR - quarantine file"
			},
			{
				"description": "This playbook accepts an XDR endpoint ID and isolates it using the 'Palo Alto Networks Cortex XDR - Investigation and Response' integration.",
				"name": "Cortex XDR - Isolate Endpoint"
			},
			{
				"description": "Use this playbook to add files to Cortex XDR block list with a given file SHA256 playbook input.",
				"name": "Cortex XDR - Block File"
			},
			{
				"description": "Investigates a Cortex XDR incident containing internal port scan alerts. The playbook:\n- Syncs data with Cortex XDR\n- Enriches the hostname and IP address of the attacking endpoint\n- Notifies management about host compromise\n- Escalates the incident in case of lateral movement alert detection\n- Hunts malware associated with the alerts across the organization\n- Blocks detected malware associated with the incident\n- Blocks IPs associated with the malware\n- Isolates the attacking endpoint\n- Allows manual blocking of ports that were used for host login following the port scan",
				"name": "Cortex XDR - Port Scan"
			},
			{
				"description": "Initiates a new endpoint script execution kill process and retrieves the results.",
				"name": "Cortex XDR - kill process"
			},
			{
				"description": "The playbook targets specific PrintNightmare rules written by Cortex XDR for both vulnerabilities:\n[CVE-2021-1675 LPE](https://nvd.nist.gov/vuln/detail/CVE-2021-1675)\n[CVE-2021-34527 RCE](https://nvd.nist.gov/vuln/detail/CVE-2021-34527)\n\nThis playbook includes the following tasks:\n- Containment of files, endpoints, users and IP Addresses\n- Enrichment of indicators\n- Data acquisition of system info and files using Cortex XDR\n- Eradicating compromised user credentials\n\n** Note: This is a beta playbook, which lets you implement and test pre-release software. Since the playbook is beta, it might contain bugs. Updates to the pack during the beta phase might include non-backward compatible features. We appreciate your feedback on the quality and usability of the pack to help us identify issues, fix them, and continually improve.",
				"name": "Cortex XDR - PrintNightmare Detection and Response"
			},
			{
				"description": "This playbook is triggered by fetching a Palo Alto Networks Cortex XDR incident.\nThe playbook syncs and updates new XDR alerts that construct the incident and triggers a sub-playbook to handle each alert by type.\nThen, the playbook performs enrichment on the incident’s indicators and hunts for related IOCs.\nBased on the severity, it lets the analyst decide whether to continue to the remediation stage or close the investigation as a false positive.\nAfter the remediation, if there are no new alerts, the playbook stops the alert sync and closes the XDR incident and investigation. For performing the bidirectional sync, the playbook uses the incoming and outgoing mirroring feature added in XSOAR version 6.0.0. After the Calculate Severity - Generic v2 sub-playbook’s run, Cortex XSOAR will be treated as the single source of truth for the severity field, and it will sync only from Cortex XSOAR to XDR, so manual changes for the severity field in XDR will not update in the XSOAR incident.",
				"name": "Cortex XDR incident handling v3"
			},
			{
				"description": "This playbook is part of the 'Malware Investigation And Response' pack. For more information, refer to https://xsoar.pan.dev/docs/reference/packs/malware-investigation-and-response.\nThis playbook enriches the Cortex XDR incident. The enrichment is done on the involved endpoint and Mitre technique ID information, and sets the 'Malware-Investigation and Response' layout.",
				"name": "Cortex XDR Malware - Incident Enrichment"
			},
			{
				"description": "  A job to periodically query Cortex XDR device control violations by a given timestamp in a relative date playbook input.\n  The collected data, if found, will be generated for a new incident.\n  You can configure the created new incident type in the playbook input and use the XDR Device Control Violations incident type to associate it with the response playbook.\n  The job includes an incident type with a dedicated layout to visualize the collected data.\n  To configure the job correctly:\n  1. Create a new recurring job.\n  2. Configure the recurring schedule.\n  3. Add a name.\n  4. Configure the type to XDR Device Control Violations.\n  5. Configure this playbook as the job playbook.\n  The scheduled run time and the timestamp relative date should be identical.\n  If the job recurs every 7 days, the timestamp should be 7 days as well.",
				"name": "JOB - Cortex XDR query endpoint device control violations"
			},
			{
				"description": "Checks the action status of an action ID. \\nEnter the action ID of the action whose status you want to know.",
				"name": "Cortex XDR - Check Action Status"
			},
			{
				"description": "Initiates a new script execution of shell commands.",
				"name": "Cortex XDR - Execute commands"
			},
			{
				"description": "This playbook is triggered by fetching a Palo Alto Networks Cortex XDR incident.\nThe playbook syncs and updates new XDR alerts that construct the incident and triggers a sub-playbook to handle each alert by type.\nThen, the playbook performs enrichment on the incident's indicators and hunting for related IOCs.\nBased on the severity, it lets the analyst decide whether to continue to the remediation stage or close the investigation as a false positive. \nAfter the remediation, if there are no new alerts, the playbook stops the alert sync and closes the XDR incident and investigation.",
				"name": "Cortex XDR incident handling v2"
			},
			{
				"description": "This playbook is part of the 'Malware Investigation And Response' pack. For more information, refer to https://xsoar.pan.dev/docs/reference/packs/malware-investigation-and-response.\nThis playbook handles a true-positive incident closure for Cortex XDR - Malware Investigation.",
				"name": "Cortex XDR - True Positive Incident Handling"
			}
		],
		"report": null,
		"reputation": null,
		"widget": [
			{
				"name": " Cortex XDR Disconnected Endpoints"
			},
			{
				"name": "Cortex XDR Top 10 files"
			},
			{
				"name": "Cortex XDR Active Device Control Violations Incidents"
			},
			{
				"name": "Cortex XDR Top 10 MITRE Techniques"
			},
			{
				"name": "Cortex XDR Active Low Severity Incidents"
			},
			{
				"name": "Cortex XDR Top 10 MITRE Tactics"
			},
			{
				"name": "Cortex XDR Top 10 Alerts"
			},
			{
				"name": "Cortex XDR Closed Device Control Violations"
			},
			{
				"name": "Cortex XDR Connected Endpoints"
			},
			{
				"name": "Cortex XDR Top 10 Hosts"
			},
			{
				"name": "Cortex XDR Top 10 Users"
			},
			{
				"name": "Cortex XDR Grouping - Incidents"
			},
			{
				"name": "Cortex XDR Unassigned Incidents"
			},
			{
				"name": "Cortex XDR Groups - Scatter"
			},
			{
				"name": "Cortex XDR Grouping - Summary"
			},
			{
				"name": "Cortex XDR Top 10 File SHA256"
			},
			{
				"name": "Cortex XDR Active High Severity Incidents"
			},
			{
				"name": "Cortex XDR Closed Incidents"
			},
			{
				"name": "Cortex XDR Active Medium Severity Incidents"
			},
			{
				"name": "Cortex XDR Top 10 Categories"
			}
		],
		"wizard": null,
		"xsiamdashboard": null,
		"xsiamreport": null
	},
	"created": "2020-07-26T19:57:43Z",
	"currentVersion": "4.8.3",
	"definitionId": "",
	"dependencies": {
		"AWS-IAM": {
			"author": "Cortex XSOAR",
			"certification": "certified",
			"mandatory": false,
			"minVersion": "1.1.10",
			"name": "AWS - IAM"
		},
		"Active_Directory_Query": {
			"author": "Cortex XSOAR",
			"certification": "certified",
			"mandatory": false,
			"minVersion": "1.4.15",
			"name": "Active Directory Query"
		},
		"AutoFocus": {
			"author": "Cortex XSOAR",
			"certification": "certified",
			"mandatory": false,
			"minVersion": "2.0.21",
			"name": "AutoFocus"
		},
		"Base": {
			"author": "Cortex XSOAR",
			"certification": "certified",
			"mandatory": true,
			"minVersion": "1.31.8",
			"name": "Base"
		},
		"CommonPlaybooks": {
			"author": "Cortex XSOAR",
			"certification": "certified",
			"mandatory": true,
			"minVersion": "2.2.10",
			"name": "Common Playbooks"
		},
		"CommonScripts": {
			"author": "Cortex XSOAR",
			"certification": "certified",
			"mandatory": false,
			"minVersion": "1.7.14",
			"name": "Common Scripts"
		},
		"CommonTypes": {
			"author": "Cortex XSOAR",
			"certification": "certified",
			"mandatory": true,
			"minVersion": "3.2.40",
			"name": "Common Types"
		},
		"FeedMitreAttackv2": {
			"author": "Cortex XSOAR",
			"certification": "certified",
			"mandatory": true,
			"minVersion": "1.1.3",
			"name": "MITRE ATT\u0026CK"
		},
		"Jira": {
			"author": "Cortex XSOAR",
			"certification": "certified",
			"mandatory": false,
			"minVersion": "2.0.7",
			"name": "Atlassian Jira"
		},
		"MalwareInvestigationAndResponse": {
			"author": "Cortex XSOAR",
			"certification": "certified",
			"mandatory": false,
			"minVersion": "1.5.6",
			"name": "Malware Investigation and Response"
		},
		"PANWComprehensiveInvestigation": {
			"author": "Cortex XSOAR",
			"certification": "certified",
			"mandatory": false,
			"minVersion": "1.3.10",
			"name": "PANW Comprehensive Investigation"
		},
		"ServiceNow": {
			"author": "Cortex XSOAR",
			"certification": "certified",
			"mandatory": false,
			"minVersion": "2.3.15",
			"name": "ServiceNow"
		}
	},
	"deprecated": false,
	"description": "Automates Cortex XDR incident response, and includes custom Cortex XDR incident views and layouts to aid analyst investigations.",
	"downloads": 16452,
	"eulaLink": "https://github.com/demisto/content/blob/master/LICENSE",
	"fromServerVersion": "5.0.0",
	"general": [
		"generalFieldCertified",
		"generalFieldByCortexXSOAR",
		"generalFieldFree",
		"generalFieldSupportIncluded"
	],
	"id": "CortexXDR",
	"installMessage": "",
	"integrations": [
		{
			"imagePath": "content/packs/CortexXDR/CortexXDR-IOC_image.png",
			"name": "Cortex XDR - IOC"
		},
		{
			"imagePath": "content/packs/CortexXDR/CortexXDR-XQLQueryEngine_image.png",
			"name": "Cortex XDR - XQL Query Engine"
		},
		{
			"imagePath": "content/packs/CortexXDR/CortexXDR-IR_image.png",
			"name": "Palo Alto Networks Cortex XDR - Investigation and Response"
		},
		{
			"imagePath": "content/packs/Active_Directory_Query/ActiveDirectoryQueryv2_image.png",
			"name": "Active Directory Query v2"
		},
		{
			"imagePath": "content/packs/AutoFocus/AutoFocusDailyFeed_image.png",
			"name": "AutoFocus Daily Feed"
		},
		{
			"imagePath": "content/packs/AutoFocus/AutoFocusDailyFeed_image.png",
			"name": "AutoFocus Daily Feed (Deprecated)"
		},
		{
			"imagePath": "content/packs/AutoFocus/AutoFocusFeed_image.png",
			"name": "AutoFocus Feed"
		},
		{
			"imagePath": "content/packs/AutoFocus/AutoFocusTagsFeed_image.png",
			"name": "AutoFocus Tags Feed"
		},
		{
			"imagePath": "content/packs/AutoFocus/Autofocus_image.png",
			"name": "Palo Alto AutoFocus"
		},
		{
			"imagePath": "content/packs/AutoFocus/Autofocus_image.png",
			"name": "Palo Alto AutoFocus (Deprecated)"
		},
		{
			"imagePath": "content/packs/AutoFocus/AutoFocusV2_image.png",
			"name": "Palo Alto Networks AutoFocus v2"
		},
		{
			"imagePath": "content/packs/ServiceNow/ServiceNow_image.png",
			"name": "ServiceNow (Deprecated)"
		},
		{
			"imagePath": "content/packs/ServiceNow/ServiceNowCMDB_image.png",
			"name": "ServiceNow CMDB"
		},
		{
			"imagePath": "content/packs/ServiceNow/ServiceNowIAM_image.png",
			"name": "ServiceNow IAM"
		},
		{
			"imagePath": "content/packs/ServiceNow/ServiceNowv2_image.png",
			"name": "ServiceNow v2"
		},
		{
			"imagePath": "content/packs/FeedMitreAttackv2/MITREATT%26CKv2_image.png",
			"name": "MITRE ATT\u0026CK"
		},
		{
			"imagePath": "content/packs/FeedMitreAttackv2/MITREATT%26CKv2_image.png",
			"name": "MITRE ATT\u0026CK Feed v2"
		},
		{
			"imagePath": "content/packs/Jira/jira-v2_image.png",
			"name": "Atlassian Jira v2"
		},
		{
			"imagePath": "content/packs/AWS-IAM/AWS-IAM_image.png",
			"name": "AWS - Identity and Access Management"
		}
	],
	"itemVersion": "4.8.3",
	"keywords": [
		"adaptive cyber protection",
		"apt"
	],
	"legacy": true,
	"name": "Palo Alto Networks Cortex XDR - Investigation and Response",
	"packID": "CortexXDR",
	"packName": "",
	"premium": false,
	"previewOnly": false,
	"price": 0,
	"propagationLabels": [
		"all"
	],
	"rawKeywords": null,
	"rawTags": null,
	"rawUseCases": null,
	"readme": "[Cortex XDR](https://www.paloaltonetworks.com/cortex/cortex-xdr) is a detection and response app that natively integrates network, endpoint, and cloud data to stop sophisticated attacks. Responding and managing these attacks requires security teams to reconcile data from multiple sources. Valuable time is lost shuttling between screens and executing repeatable tasks while an attack continues to manifest. \n\nThis Cortex XDR content pack contains the **Palo Alto Networks Cortex XDR - Investigation and Response** integration that enables direct execution of Cortex XDR actions within Cortex XSOAR. The **Cortex XDR Incident Handling v3** playbook enables bidirectional incident updates between Cortex XDR and Cortex XSOAR. \n\n## What does this pack do?\nThe playbooks included in this pack help you save time and keep your incidents in sync. They also help automate repetitive tasks associated with Cortex XDR incidents:\n\n- Syncs and updates Cortex XDR incidents.\n- Triggers a sub-playbook to handle each alert by type.\n- Extracts and enriches all relevant indicators from the source alert.\n- Hunts for related IOCs.\n- Calculates the severity of the incident.\n- Interacts with the analyst to choose a remediation path or close the incident as a false positive based on the gathered information and incident severity.\n- Remediates the incident by blocking malicious indicators and isolating infected endpoints.\n\nAs part of this pack, you will also get out-of-the-box Cortex XDR incident type views, with incident fields and a full layout to facilitate analyst investigation. All of these are easily customizable to suit the needs of your organization.\n\n_For more information, visit our [Cortex XSOAR Developer Docs](https://xsoar.pan.dev/docs/reference/packs/palo-alto-networks-cortex-xdr---investigation-and-response)_\n\n![Cortex XDR incident handling v3](https://raw.githubusercontent.com/demisto/content/master/Packs/CortexXDR/doc_files/Cortex_XDR_incident_handling_v3.png)\n",
	"searchRank": 10,
	"serverMaxVersion": "",
	"serverMinVersion": "5.0.0",
	"support": "xsoar",
	"supportDetails": {
		"email": "",
		"url": "https://www.paloaltonetworks.com/cortex"
	},
	"tags": [
		"TIM",
		"Incident Mirroring",
		"Use Case"
	],
	"toServerVersion": "",
	"updated": "2022-07-21T11:42:46Z",
	"useCases": [
		"Malware"
	],
	"version": -1,
	"versionInfo": "3305407",
	"videos": [
		"https://www.youtube.com/watch?v=ium2969zgn8"
	]
}