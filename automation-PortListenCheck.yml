args:
- description: Hostname to check.
  name: host
  required: true
- description: Port to check.
  name: port
comment: Checks whether a port was open on given host.
commonfields:
  id: PortListenCheck
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: 5.0.0
    itemVersion: 1.6.63
    packID: CommonScripts
    packName: Common Scripts
    packPropagationLabels:
    - all
    propagationLabels: []
    toServerVersion: ""
dockerimage: demisto/python:2.7.18.27799
enabled: true
engineinfo: {}
mainengineinfo: {}
name: PortListenCheck
outputs:
- contextPath: portOpen
  description: Returns true if given port on host was open.
  type: boolean
pswd: ""
runas: DBotWeakRole
runonce: false
script: |
  register_module_line('PortListenCheck', 'start', __line__())
  import socket




  sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
  port = int(demisto.args()["port"])
  host = demisto.args()["host"]
  result = sock.connect_ex((host, port))
  openPort = False
  if result == 0:
      resp = "Port " + str(port) + " is open on host:" + host
      openPort = True
  else:
      resp = "Port " + str(port) + " is not open on host:" + host

  demisto.results({'Type': entryTypes['note'],
                   'Contents': resp,
                   'ContentsFormat': formats['json'],
                   'HumanReadable': resp,
                   'ReadableContentsFormat': formats['markdown'],
                   'EntryContext': {"portOpen": openPort}})

  register_module_line('PortListenCheck', 'end', __line__())
scripttarget: 0
subtype: python2
system: true
tags: []
type: python
